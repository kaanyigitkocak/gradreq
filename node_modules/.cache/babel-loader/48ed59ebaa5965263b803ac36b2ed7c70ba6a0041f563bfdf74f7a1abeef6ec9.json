{"ast":null,"code":"var _jsxFileName = \"/Users/yigit/Projects/GradReq/gms-main/src/pages/StudentDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { getApiUrl, getApiHeaders } from '../config/api';\nimport StudentTable from '../components/common/StudentTable';\nimport StudentForm from '../components/common/StudentForm';\nimport { getUserDetails } from '../utils/authUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentDashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [students, setStudents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [debugInfo, setDebugInfo] = useState(null);\n  const userDetails = getUserDetails();\n\n  // Pagination state\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pageSize, setPageSize] = useState(10);\n  const [totalPages, setTotalPages] = useState(1);\n  const [totalCount, setTotalCount] = useState(0);\n\n  // Öğrenci ekleme ve düzenleme formu state'leri\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [departments, setDepartments] = useState([]);\n  const [faculties, setFaculties] = useState([]);\n  const [studentToEdit, setStudentToEdit] = useState(null);\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('tokenExpiration');\n    navigate('/');\n  };\n\n  // Fakülte ve bölüm verilerini getir\n  const fetchFacultiesAndDepartments = async () => {\n    try {\n      const token = localStorage.getItem('token');\n\n      // Fakülteleri getir - PageSize=100 parametresi eklendi\n      const facultiesResponse = await axios({\n        method: 'get',\n        url: getApiUrl('/api/Faculties?PageSize=100'),\n        headers: getApiHeaders(token),\n        timeout: 15000\n      });\n      console.log('Fakülteler API yanıtı:', facultiesResponse.data);\n\n      // Bölümleri getir - PageSize=100 parametresi eklendi\n      const departmentsResponse = await axios({\n        method: 'get',\n        url: getApiUrl('/api/Departments?PageSize=100'),\n        headers: getApiHeaders(token),\n        timeout: 15000\n      });\n      console.log('Bölümler API yanıtı:', departmentsResponse.data);\n\n      // Fakülte ve bölümlerin API yapısını kontrol et\n      let facultiesData = [];\n      if (facultiesResponse.data) {\n        if (Array.isArray(facultiesResponse.data)) {\n          facultiesData = facultiesResponse.data;\n        } else if (facultiesResponse.data.items && Array.isArray(facultiesResponse.data.items)) {\n          facultiesData = facultiesResponse.data.items;\n        } else if (typeof facultiesResponse.data === 'object') {\n          // Eğer beklenmeyen bir formatta geldiyse\n          console.warn('Fakülte verileri beklenmeyen formatta:', facultiesResponse.data);\n          facultiesData = Object.values(facultiesResponse.data).filter(item => typeof item === 'object');\n        }\n      }\n      let departmentsData = [];\n      if (departmentsResponse.data) {\n        if (Array.isArray(departmentsResponse.data)) {\n          departmentsData = departmentsResponse.data;\n        } else if (departmentsResponse.data.items && Array.isArray(departmentsResponse.data.items)) {\n          departmentsData = departmentsResponse.data.items;\n        } else if (typeof departmentsResponse.data === 'object') {\n          // Eğer beklenmeyen bir formatta geldiyse\n          console.warn('Bölüm verileri beklenmeyen formatta:', departmentsResponse.data);\n          departmentsData = Object.values(departmentsResponse.data).filter(item => typeof item === 'object');\n        }\n      }\n\n      // Debug için detaylı veri içeriği\n      console.log('İşlenmiş Fakülte verileri:', facultiesData);\n      console.log('İşlenmiş Bölüm verileri:', departmentsData);\n\n      // Veri yapılarını standartlaştır\n      facultiesData = facultiesData.map(faculty => ({\n        id: faculty.id,\n        name: faculty.name || faculty.facultyName || ''\n      }));\n      departmentsData = departmentsData.map(dept => ({\n        id: dept.id,\n        name: dept.name || dept.departmentName || '',\n        facultyId: dept.facultyId\n      }));\n\n      // Fakülte ve bölüm adlarını konsola yazdir\n      console.log('=== FAKÜLTELER ===');\n      facultiesData.forEach((faculty, index) => {\n        console.log(`${index + 1}. ${faculty.name} (ID: ${faculty.id})`);\n      });\n      console.log('=== BÖLÜMLER ===');\n      departmentsData.forEach((dept, index) => {\n        const parentFaculty = facultiesData.find(f => f.id === dept.facultyId);\n        console.log(`${index + 1}. ${dept.name} (ID: ${dept.id}) - Fakülte: ${(parentFaculty === null || parentFaculty === void 0 ? void 0 : parentFaculty.name) || 'Bilinmiyor'}`);\n      });\n\n      // ID'lerin tiplerini kontrol et\n      facultiesData.forEach(f => {\n        console.log(`Fakülte: ${f.name}, ID: ${f.id}, ID tipi: ${typeof f.id}`);\n      });\n      departmentsData.forEach(d => {\n        console.log(`Bölüm: ${d.name}, ID: ${d.id}, facultyId: ${d.facultyId}, facultyId tipi: ${typeof d.facultyId}`);\n      });\n      setFaculties(facultiesData);\n      setDepartments(departmentsData);\n    } catch (err) {\n      console.error('Fakülte ve bölüm verileri getirme hatası:', err);\n      if (err.response) {\n        console.error('API hata detayları:', err.response.status, err.response.data);\n      }\n    }\n  };\n\n  // Öğrenci verilerini doğru yapıya dönüştüren yardımcı fonksiyon\n  const processStudentData = students => {\n    return students.map(student => {\n      // Öğrenci için isim oluştur\n      let displayName = 'Student';\n      if (student.firstName && student.lastName) {\n        displayName = `${student.firstName} ${student.lastName}`;\n      } else if (student.name) {\n        displayName = student.name;\n      } else if (student.userName) {\n        displayName = student.userName;\n      } else if (student.displayName) {\n        displayName = student.displayName;\n      } else if (student.studentNumber) {\n        displayName = `Student ${student.studentNumber}`;\n      } else if (student.studentId) {\n        displayName = `Student ${student.studentId}`;\n      } else if (student.id) {\n        displayName = `Student ${student.id}`;\n      }\n\n      // E-posta oluştur\n      const email = student.email || `${student.studentNumber || student.studentId || 'student'}@university.edu`;\n      return {\n        ...student,\n        email,\n        displayName\n      };\n    });\n  };\n\n  // Fetch students from API\n  const fetchStudents = async () => {\n    try {\n      setLoading(true);\n\n      // Get the token from localStorage\n      const token = localStorage.getItem('token');\n\n      // API URL'ini consola yazdır\n      const apiUrl = getApiUrl(`/api/Students?PageIndex=${pageIndex}&PageSize=${pageSize}`);\n      console.log('API URL:', apiUrl);\n      console.log('Token:', token ? 'Mevcut' : 'Yok');\n\n      // API çağrısı - yeni headers yapılandırmasını kullan\n      const response = await axios({\n        method: 'get',\n        url: apiUrl,\n        headers: getApiHeaders(token),\n        responseType: 'json',\n        timeout: 15000 // 15 saniye timeout\n      });\n      console.log('API Response Status:', response.status);\n      console.log('API Response Type:', typeof response.data);\n\n      // HTML yanıtı kontrolü\n      if (typeof response.data === 'string' && response.data.includes('<!DOCTYPE html>')) {\n        console.log('HTML yanıtı alındı, bu bir Ngrok uyarısı olabilir');\n        setError('API HTML yanıtı döndü. Ngrok uyarısı atlatılamadı.');\n        setStudents([]);\n        setLoading(false);\n        return;\n      }\n\n      // Kısa bir veri önizlemesi göster (çok büyük değilse)\n      if (typeof response.data === 'string' && response.data.length < 1000) {\n        console.log('API Raw Response:', response.data);\n      } else if (typeof response.data === 'object') {\n        console.log('API Response Object:', typeof response.data === 'object' ? 'Object received' : 'Not an object');\n      }\n      let processedData = response.data;\n\n      // Yanıt bir string ise JSON olarak ayrıştırmayı dene\n      if (typeof response.data === 'string') {\n        try {\n          console.log('Response is string, trying to parse as JSON');\n          processedData = JSON.parse(response.data);\n          console.log('Parsed data:', processedData ? 'Available' : 'Empty');\n        } catch (parseError) {\n          console.error('Failed to parse response as JSON:', parseError);\n          setError('API JSON parsing error: ' + parseError.message);\n          setStudents([]);\n          setLoading(false);\n          return;\n        }\n      }\n\n      // Handle different response formats\n      if (processedData) {\n        if (Array.isArray(processedData)) {\n          // Direct array response\n          console.log('Response contains direct array with', processedData.length, 'items');\n          const resultData = processStudentData(processedData);\n          setStudents(resultData);\n          setTotalCount(processedData.length);\n          setTotalPages(Math.ceil(processedData.length / pageSize));\n          setError(null);\n        } else if (processedData.items && Array.isArray(processedData.items)) {\n          // Paginated response with items array\n          console.log('Response contains paginated items array with', processedData.items.length, 'items');\n          const resultData = processStudentData(processedData.items);\n          setStudents(resultData);\n          setTotalPages(processedData.pages || 1);\n          setTotalCount(processedData.count || 0);\n          setError(null);\n        } else if (Array.isArray(processedData.data)) {\n          // Alternatif API yanıtı formatı\n          console.log('Response contains data array with', processedData.data.length, 'items');\n          const resultData = processStudentData(processedData.data);\n          setStudents(resultData);\n          setTotalCount(processedData.data.length);\n          setTotalPages(Math.ceil(processedData.data.length / pageSize));\n          setError(null);\n        } else {\n          console.error('Unexpected API response format:', typeof processedData);\n          setStudents([]);\n          setTotalCount(0);\n          setTotalPages(1);\n          setError('Unexpected data format received from server');\n        }\n      } else {\n        console.log('No data in response');\n        setStudents([]);\n        setTotalCount(0);\n        setTotalPages(1);\n        setError('No data received from server');\n      }\n    } catch (err) {\n      console.error('Failed to fetch students:', err);\n      console.error('Error details:', err.message);\n      if (err.response) {\n        console.error('Error response:', err.response.status, err.response.data);\n        setDebugInfo({\n          errorStatus: err.response.status,\n          errorData: JSON.stringify(err.response.data)\n        });\n      }\n      setStudents([]);\n      setTotalCount(0);\n      setTotalPages(1);\n      setError(`Failed to load students: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch students when component mounts or pagination changes\n  useEffect(() => {\n    fetchStudents();\n  }, [pageIndex, pageSize]); // Re-fetch when pagination changes\n\n  // Fakülte ve bölüm verilerini sayfa yüklendiğinde bir kez getir\n  useEffect(() => {\n    fetchFacultiesAndDepartments();\n  }, []);\n\n  // Handle pagination change\n  const handlePageChange = newPage => {\n    if (newPage >= 0 && newPage < totalPages) {\n      setPageIndex(newPage);\n    }\n  };\n\n  // Öğrenci düzenleme işlemini başlat\n  const handleEditStudent = student => {\n    setStudentToEdit(student);\n    setShowAddForm(true);\n    // Sayfayı form kısmına scroll yap\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n\n  // Form kapatıldığında\n  const handleFormClose = () => {\n    setShowAddForm(false);\n    setStudentToEdit(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: container,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      style: header,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/iyte-logo.png\",\n        alt: \"Logo\",\n        style: logoStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: titleStyle,\n        children: \"Graduation Management System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        style: logoutBtnStyle,\n        children: \"Log Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      style: main,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", (userDetails === null || userDetails === void 0 ? void 0 : userDetails.email) || 'Student']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: addButtonContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setStudentToEdit(null); // Yeni öğrenci moduna geç\n            setShowAddForm(!showAddForm);\n          },\n          style: addButtonStyle,\n          children: showAddForm ? 'Formu Kapat ↑' : '+ Yeni Öğrenci Ekle'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), showAddForm && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFormClose,\n          style: closeButtonStyle,\n          children: \"\\u0130ptal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#f8d7da',\n          color: '#721c24',\n          padding: '10px',\n          margin: '10px',\n          borderRadius: '4px'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 11\n      }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#e2f3ff',\n          color: '#0c5460',\n          padding: '10px',\n          margin: '10px',\n          borderRadius: '4px',\n          fontSize: '12px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Debug Info:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(debugInfo, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this), showAddForm && /*#__PURE__*/_jsxDEV(StudentForm, {\n        onStudentAdded: () => {\n          fetchStudents();\n          // Başarılı kaydetme sonrası formu kapat (isteğe bağlı)\n          // setShowAddForm(false);\n          // setStudentToEdit(null);\n        },\n        faculties: faculties,\n        departments: departments,\n        studentToEdit: studentToEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StudentTable, {\n        students: students,\n        loading: loading,\n        onEdit: handleEditStudent,\n        onRefresh: fetchStudents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange(pageIndex - 1),\n          disabled: pageIndex === 0 || loading,\n          style: {\n            margin: '0 10px',\n            padding: '5px 10px'\n          },\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            margin: '0 10px',\n            padding: '5px 10px'\n          },\n          children: [\"Page \", pageIndex + 1, \" of \", totalPages, \" (\", totalCount, \" items)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange(pageIndex + 1),\n          disabled: pageIndex === totalPages - 1 || loading,\n          style: {\n            margin: '0 10px',\n            padding: '5px 10px'\n          },\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 321,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentDashboard, \"cCOqvlxVfpPSN1MTOAY42scZFbs=\", false, function () {\n  return [useNavigate];\n});\n_c = StudentDashboard;\nconst container = {\n  fontFamily: 'Arial, sans-serif'\n};\nconst header = {\n  background: 'linear-gradient(to right, #7b1fa2, #a0181b)',\n  color: 'white',\n  padding: '10px 30px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  boxShadow: '0 2px 10px rgba(0,0,0,0.1)'\n};\nconst logoStyle = {\n  height: '40px'\n};\nconst titleStyle = {\n  flexGrow: 1,\n  textAlign: 'center',\n  fontSize: '20px',\n  fontWeight: '600',\n  margin: 0\n};\nconst logoutBtnStyle = {\n  width: '100px',\n  height: '50px',\n  backgroundColor: 'transparent',\n  color: 'white',\n  border: '2px solid white',\n  borderRadius: '6px',\n  fontSize: '13px',\n  fontWeight: 'bold',\n  cursor: 'pointer'\n};\nconst main = {\n  padding: '2rem'\n};\n\n// Yeni öğrenci ekleme butonu container stili\nconst addButtonContainer = {\n  display: 'flex',\n  justifyContent: 'center',\n  margin: '20px 0',\n  padding: '10px',\n  backgroundColor: '#f0f0f0',\n  borderRadius: '8px',\n  gap: '10px'\n};\n\n// Yeni öğrenci ekleme butonu stili\nconst addButtonStyle = {\n  padding: '15px 30px',\n  fontSize: '16px',\n  fontWeight: 'bold',\n  backgroundColor: '#9C27B0',\n  color: 'white',\n  border: 'none',\n  borderRadius: '8px',\n  cursor: 'pointer',\n  boxShadow: '0 4px 8px rgba(0,0,0,0.2)',\n  transition: 'all 0.3s ease'\n};\n\n// İptal butonu stili\nconst closeButtonStyle = {\n  padding: '15px 30px',\n  fontSize: '16px',\n  fontWeight: 'bold',\n  backgroundColor: '#f44336',\n  color: 'white',\n  border: 'none',\n  borderRadius: '8px',\n  cursor: 'pointer',\n  boxShadow: '0 4px 8px rgba(0,0,0,0.2)',\n  transition: 'all 0.3s ease'\n};\nexport default StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","getApiUrl","getApiHeaders","StudentTable","StudentForm","getUserDetails","jsxDEV","_jsxDEV","StudentDashboard","_s","navigate","students","setStudents","loading","setLoading","error","setError","debugInfo","setDebugInfo","userDetails","pageIndex","setPageIndex","pageSize","setPageSize","totalPages","setTotalPages","totalCount","setTotalCount","showAddForm","setShowAddForm","departments","setDepartments","faculties","setFaculties","studentToEdit","setStudentToEdit","handleLogout","localStorage","removeItem","fetchFacultiesAndDepartments","token","getItem","facultiesResponse","method","url","headers","timeout","console","log","data","departmentsResponse","facultiesData","Array","isArray","items","warn","Object","values","filter","item","departmentsData","map","faculty","id","name","facultyName","dept","departmentName","facultyId","forEach","index","parentFaculty","find","f","d","err","response","status","processStudentData","student","displayName","firstName","lastName","userName","studentNumber","studentId","email","fetchStudents","apiUrl","responseType","includes","length","processedData","JSON","parse","parseError","message","resultData","Math","ceil","pages","count","errorStatus","errorData","stringify","handlePageChange","newPage","handleEditStudent","window","scrollTo","top","behavior","handleFormClose","style","container","children","header","src","alt","logoStyle","fileName","_jsxFileName","lineNumber","columnNumber","titleStyle","onClick","logoutBtnStyle","main","addButtonContainer","addButtonStyle","closeButtonStyle","backgroundColor","color","padding","margin","borderRadius","fontSize","onStudentAdded","onEdit","onRefresh","display","justifyContent","marginTop","disabled","_c","fontFamily","background","alignItems","boxShadow","height","flexGrow","textAlign","fontWeight","width","border","cursor","gap","transition","$RefreshReg$"],"sources":["/Users/yigit/Projects/GradReq/gms-main/src/pages/StudentDashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { getApiUrl, getApiHeaders } from '../config/api';\nimport StudentTable from '../components/common/StudentTable';\nimport StudentForm from '../components/common/StudentForm';\nimport { getUserDetails } from '../utils/authUtils';\n\nconst StudentDashboard = () => {\n  const navigate = useNavigate();\n  const [students, setStudents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [debugInfo, setDebugInfo] = useState(null);\n  const userDetails = getUserDetails();\n  \n  // Pagination state\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pageSize, setPageSize] = useState(10);\n  const [totalPages, setTotalPages] = useState(1);\n  const [totalCount, setTotalCount] = useState(0);\n\n  // Öğrenci ekleme ve düzenleme formu state'leri\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [departments, setDepartments] = useState([]);\n  const [faculties, setFaculties] = useState([]);\n  const [studentToEdit, setStudentToEdit] = useState(null);\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('tokenExpiration');\n    navigate('/');\n  };\n\n  // Fakülte ve bölüm verilerini getir\n  const fetchFacultiesAndDepartments = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      \n      // Fakülteleri getir - PageSize=100 parametresi eklendi\n      const facultiesResponse = await axios({\n        method: 'get',\n        url: getApiUrl('/api/Faculties?PageSize=100'),\n        headers: getApiHeaders(token),\n        timeout: 15000\n      });\n      \n      console.log('Fakülteler API yanıtı:', facultiesResponse.data);\n      \n      // Bölümleri getir - PageSize=100 parametresi eklendi\n      const departmentsResponse = await axios({\n        method: 'get',\n        url: getApiUrl('/api/Departments?PageSize=100'),\n        headers: getApiHeaders(token),\n        timeout: 15000\n      });\n      \n      console.log('Bölümler API yanıtı:', departmentsResponse.data);\n      \n      // Fakülte ve bölümlerin API yapısını kontrol et\n      let facultiesData = [];\n      if (facultiesResponse.data) {\n        if (Array.isArray(facultiesResponse.data)) {\n          facultiesData = facultiesResponse.data;\n        } else if (facultiesResponse.data.items && Array.isArray(facultiesResponse.data.items)) {\n          facultiesData = facultiesResponse.data.items;\n        } else if (typeof facultiesResponse.data === 'object') {\n          // Eğer beklenmeyen bir formatta geldiyse\n          console.warn('Fakülte verileri beklenmeyen formatta:', facultiesResponse.data);\n          facultiesData = Object.values(facultiesResponse.data).filter(item => typeof item === 'object');\n        }\n      }\n      \n      let departmentsData = [];\n      if (departmentsResponse.data) {\n        if (Array.isArray(departmentsResponse.data)) {\n          departmentsData = departmentsResponse.data;\n        } else if (departmentsResponse.data.items && Array.isArray(departmentsResponse.data.items)) {\n          departmentsData = departmentsResponse.data.items;\n        } else if (typeof departmentsResponse.data === 'object') {\n          // Eğer beklenmeyen bir formatta geldiyse\n          console.warn('Bölüm verileri beklenmeyen formatta:', departmentsResponse.data);\n          departmentsData = Object.values(departmentsResponse.data).filter(item => typeof item === 'object');\n        }\n      }\n      \n      // Debug için detaylı veri içeriği\n      console.log('İşlenmiş Fakülte verileri:', facultiesData);\n      console.log('İşlenmiş Bölüm verileri:', departmentsData);\n      \n      // Veri yapılarını standartlaştır\n      facultiesData = facultiesData.map(faculty => ({\n        id: faculty.id,\n        name: faculty.name || faculty.facultyName || ''\n      }));\n      \n      departmentsData = departmentsData.map(dept => ({\n        id: dept.id,\n        name: dept.name || dept.departmentName || '',\n        facultyId: dept.facultyId\n      }));\n      \n      // Fakülte ve bölüm adlarını konsola yazdir\n      console.log('=== FAKÜLTELER ===');\n      facultiesData.forEach((faculty, index) => {\n        console.log(`${index + 1}. ${faculty.name} (ID: ${faculty.id})`);\n      });\n      \n      console.log('=== BÖLÜMLER ===');\n      departmentsData.forEach((dept, index) => {\n        const parentFaculty = facultiesData.find(f => f.id === dept.facultyId);\n        console.log(`${index + 1}. ${dept.name} (ID: ${dept.id}) - Fakülte: ${parentFaculty?.name || 'Bilinmiyor'}`);\n      });\n      \n      // ID'lerin tiplerini kontrol et\n      facultiesData.forEach(f => {\n        console.log(`Fakülte: ${f.name}, ID: ${f.id}, ID tipi: ${typeof f.id}`);\n      });\n      \n      departmentsData.forEach(d => {\n        console.log(`Bölüm: ${d.name}, ID: ${d.id}, facultyId: ${d.facultyId}, facultyId tipi: ${typeof d.facultyId}`);\n      });\n      \n      setFaculties(facultiesData);\n      setDepartments(departmentsData);\n      \n    } catch (err) {\n      console.error('Fakülte ve bölüm verileri getirme hatası:', err);\n      if (err.response) {\n        console.error('API hata detayları:', err.response.status, err.response.data);\n      }\n    }\n  };\n\n  // Öğrenci verilerini doğru yapıya dönüştüren yardımcı fonksiyon\n  const processStudentData = (students) => {\n    return students.map(student => {\n      // Öğrenci için isim oluştur\n      let displayName = 'Student';\n      if (student.firstName && student.lastName) {\n        displayName = `${student.firstName} ${student.lastName}`;\n      } else if (student.name) {\n        displayName = student.name;\n      } else if (student.userName) {\n        displayName = student.userName;\n      } else if (student.displayName) {\n        displayName = student.displayName;\n      } else if (student.studentNumber) {\n        displayName = `Student ${student.studentNumber}`;\n      } else if (student.studentId) {\n        displayName = `Student ${student.studentId}`;\n      } else if (student.id) {\n        displayName = `Student ${student.id}`;\n      }\n      \n      // E-posta oluştur\n      const email = student.email || \n        `${student.studentNumber || student.studentId || 'student'}@university.edu`;\n      \n      return {\n        ...student,\n        email,\n        displayName\n      };\n    });\n  };\n\n  // Fetch students from API\n  const fetchStudents = async () => {\n    try {\n      setLoading(true);\n      \n      // Get the token from localStorage\n      const token = localStorage.getItem('token');\n      \n      // API URL'ini consola yazdır\n      const apiUrl = getApiUrl(`/api/Students?PageIndex=${pageIndex}&PageSize=${pageSize}`);\n      console.log('API URL:', apiUrl);\n      console.log('Token:', token ? 'Mevcut' : 'Yok');\n      \n      // API çağrısı - yeni headers yapılandırmasını kullan\n      const response = await axios({\n        method: 'get',\n        url: apiUrl,\n        headers: getApiHeaders(token),\n        responseType: 'json',\n        timeout: 15000 // 15 saniye timeout\n      });\n      \n      console.log('API Response Status:', response.status);\n      console.log('API Response Type:', typeof response.data);\n      \n      // HTML yanıtı kontrolü\n      if (typeof response.data === 'string' && response.data.includes('<!DOCTYPE html>')) {\n        console.log('HTML yanıtı alındı, bu bir Ngrok uyarısı olabilir');\n        setError('API HTML yanıtı döndü. Ngrok uyarısı atlatılamadı.');\n        setStudents([]);\n        setLoading(false);\n        return;\n      }\n      \n      // Kısa bir veri önizlemesi göster (çok büyük değilse)\n      if (typeof response.data === 'string' && response.data.length < 1000) {\n        console.log('API Raw Response:', response.data);\n      } else if (typeof response.data === 'object') {\n        console.log('API Response Object:', typeof response.data === 'object' ? 'Object received' : 'Not an object');\n      }\n      \n      let processedData = response.data;\n      \n      // Yanıt bir string ise JSON olarak ayrıştırmayı dene\n      if (typeof response.data === 'string') {\n        try {\n          console.log('Response is string, trying to parse as JSON');\n          processedData = JSON.parse(response.data);\n          console.log('Parsed data:', processedData ? 'Available' : 'Empty');\n        } catch (parseError) {\n          console.error('Failed to parse response as JSON:', parseError);\n          setError('API JSON parsing error: ' + parseError.message);\n          setStudents([]);\n          setLoading(false);\n          return;\n        }\n      }\n      \n      // Handle different response formats\n      if (processedData) {\n        if (Array.isArray(processedData)) {\n          // Direct array response\n          console.log('Response contains direct array with', processedData.length, 'items');\n          const resultData = processStudentData(processedData);\n          setStudents(resultData);\n          setTotalCount(processedData.length);\n          setTotalPages(Math.ceil(processedData.length / pageSize));\n          setError(null);\n        } else if (processedData.items && Array.isArray(processedData.items)) {\n          // Paginated response with items array\n          console.log('Response contains paginated items array with', processedData.items.length, 'items');\n          const resultData = processStudentData(processedData.items);\n          setStudents(resultData);\n          setTotalPages(processedData.pages || 1);\n          setTotalCount(processedData.count || 0);\n          setError(null);\n        } else if (Array.isArray(processedData.data)) {\n          // Alternatif API yanıtı formatı\n          console.log('Response contains data array with', processedData.data.length, 'items');\n          const resultData = processStudentData(processedData.data);\n          setStudents(resultData);\n          setTotalCount(processedData.data.length);\n          setTotalPages(Math.ceil(processedData.data.length / pageSize));\n          setError(null);\n        } else {\n          console.error('Unexpected API response format:', typeof processedData);\n          setStudents([]);\n          setTotalCount(0);\n          setTotalPages(1);\n          setError('Unexpected data format received from server');\n        }\n      } else {\n        console.log('No data in response');\n        setStudents([]);\n        setTotalCount(0);\n        setTotalPages(1);\n        setError('No data received from server');\n      }\n    } catch (err) {\n      console.error('Failed to fetch students:', err);\n      console.error('Error details:', err.message);\n      if (err.response) {\n        console.error('Error response:', err.response.status, err.response.data);\n        setDebugInfo({\n          errorStatus: err.response.status,\n          errorData: JSON.stringify(err.response.data)\n        });\n      }\n      \n      setStudents([]);\n      setTotalCount(0);\n      setTotalPages(1);\n      setError(`Failed to load students: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch students when component mounts or pagination changes\n  useEffect(() => {\n    fetchStudents();\n  }, [pageIndex, pageSize]); // Re-fetch when pagination changes\n\n  // Fakülte ve bölüm verilerini sayfa yüklendiğinde bir kez getir\n  useEffect(() => {\n    fetchFacultiesAndDepartments();\n  }, []);\n\n  // Handle pagination change\n  const handlePageChange = (newPage) => {\n    if (newPage >= 0 && newPage < totalPages) {\n      setPageIndex(newPage);\n    }\n  };\n\n  // Öğrenci düzenleme işlemini başlat\n  const handleEditStudent = (student) => {\n    setStudentToEdit(student);\n    setShowAddForm(true);\n    // Sayfayı form kısmına scroll yap\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n\n  // Form kapatıldığında\n  const handleFormClose = () => {\n    setShowAddForm(false);\n    setStudentToEdit(null);\n  };\n\n  return (\n    <div style={container}>\n      <header style={header}>\n        <img src=\"/iyte-logo.png\" alt=\"Logo\" style={logoStyle} />\n        <h1 style={titleStyle}>Graduation Management System</h1>\n        <button onClick={handleLogout} style={logoutBtnStyle}>Log Out</button>\n      </header>\n\n      <main style={main}>\n        <h2>Welcome, {userDetails?.email || 'Student'}</h2>\n        \n        {/* Öğrenci Ekle Butonu */}\n        <div style={addButtonContainer}>\n          <button \n            onClick={() => {\n              setStudentToEdit(null); // Yeni öğrenci moduna geç\n              setShowAddForm(!showAddForm);\n            }}\n            style={addButtonStyle}\n          >\n            {showAddForm ? 'Formu Kapat ↑' : '+ Yeni Öğrenci Ekle'}\n          </button>\n          \n          {showAddForm && (\n            <button \n              onClick={handleFormClose}\n              style={closeButtonStyle}\n            >\n              İptal\n            </button>\n          )}\n        </div>\n        \n        {error && (\n          <div style={{ backgroundColor: '#f8d7da', color: '#721c24', padding: '10px', margin: '10px', borderRadius: '4px' }}>\n            {error}\n          </div>\n        )}\n        \n        {debugInfo && (\n          <div style={{ backgroundColor: '#e2f3ff', color: '#0c5460', padding: '10px', margin: '10px', borderRadius: '4px', fontSize: '12px' }}>\n            <strong>Debug Info:</strong>\n            <pre>{JSON.stringify(debugInfo, null, 2)}</pre>\n          </div>\n        )}\n        \n        {/* Öğrenci Ekleme/Düzenleme Formu */}\n        {showAddForm && (\n          <StudentForm \n            onStudentAdded={() => {\n              fetchStudents();\n              // Başarılı kaydetme sonrası formu kapat (isteğe bağlı)\n              // setShowAddForm(false);\n              // setStudentToEdit(null);\n            }} \n            faculties={faculties} \n            departments={departments}\n            studentToEdit={studentToEdit}\n          />\n        )}\n        \n        {/* Öğrenci Tablosu */}\n        <StudentTable \n          students={students} \n          loading={loading}\n          onEdit={handleEditStudent}\n          onRefresh={fetchStudents}\n        />\n        \n        {/* Pagination controls */}\n        {totalPages > 1 && (\n          <div style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}>\n            <button \n              onClick={() => handlePageChange(pageIndex - 1)} \n              disabled={pageIndex === 0 || loading}\n              style={{ margin: '0 10px', padding: '5px 10px' }}\n            >\n              Previous\n            </button>\n            <span style={{ margin: '0 10px', padding: '5px 10px' }}>\n              Page {pageIndex + 1} of {totalPages} ({totalCount} items)\n            </span>\n            <button \n              onClick={() => handlePageChange(pageIndex + 1)} \n              disabled={pageIndex === totalPages - 1 || loading}\n              style={{ margin: '0 10px', padding: '5px 10px' }}\n            >\n              Next\n            </button>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nconst container = {\n  fontFamily: 'Arial, sans-serif',\n};\n\nconst header = {\n  background: 'linear-gradient(to right, #7b1fa2, #a0181b)',\n  color: 'white',\n  padding: '10px 30px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  boxShadow: '0 2px 10px rgba(0,0,0,0.1)',\n};\n\nconst logoStyle = {\n  height: '40px',\n};\n\nconst titleStyle = {\n  flexGrow: 1,\n  textAlign: 'center',\n  fontSize: '20px',\n  fontWeight: '600',\n  margin: 0,\n};\n\nconst logoutBtnStyle = {\n  width: '100px',\n  height: '50px',\n  backgroundColor: 'transparent',\n  color: 'white',\n  border: '2px solid white',\n  borderRadius: '6px',\n  fontSize: '13px',\n  fontWeight: 'bold',\n  cursor: 'pointer',\n};\n\nconst main = {\n  padding: '2rem',\n};\n\n// Yeni öğrenci ekleme butonu container stili\nconst addButtonContainer = {\n  display: 'flex',\n  justifyContent: 'center',\n  margin: '20px 0',\n  padding: '10px',\n  backgroundColor: '#f0f0f0',\n  borderRadius: '8px',\n  gap: '10px'\n};\n\n// Yeni öğrenci ekleme butonu stili\nconst addButtonStyle = {\n  padding: '15px 30px',\n  fontSize: '16px',\n  fontWeight: 'bold',\n  backgroundColor: '#9C27B0',\n  color: 'white',\n  border: 'none',\n  borderRadius: '8px',\n  cursor: 'pointer',\n  boxShadow: '0 4px 8px rgba(0,0,0,0.2)',\n  transition: 'all 0.3s ease',\n};\n\n// İptal butonu stili\nconst closeButtonStyle = {\n  padding: '15px 30px',\n  fontSize: '16px',\n  fontWeight: 'bold',\n  backgroundColor: '#f44336',\n  color: 'white',\n  border: 'none',\n  borderRadius: '8px',\n  cursor: 'pointer',\n  boxShadow: '0 4px 8px rgba(0,0,0,0.2)',\n  transition: 'all 0.3s ease',\n};\n\nexport default StudentDashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}