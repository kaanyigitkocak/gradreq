{"ast":null,"code":"var _jsxFileName = \"/Users/yigit/Projects/GradReq/gms-main/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { getApiUrl, getApiHeaders } from '../config/api';\nimport StudentTable from '../components/common/StudentTable';\nimport StudentForm from '../components/common/StudentForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [students, setStudents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [debugInfo, setDebugInfo] = useState(null);\n\n  // Pagination state\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pageSize, setPageSize] = useState(10);\n  const [totalPages, setTotalPages] = useState(1);\n  const [totalCount, setTotalCount] = useState(0);\n\n  // Öğrenci ekleme formu state'leri\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [departments, setDepartments] = useState([]);\n  const [faculties, setFaculties] = useState([]);\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('tokenExpiration');\n    navigate('/');\n  };\n\n  // Fakülte ve bölüm verilerini getir\n  const fetchFacultiesAndDepartments = async () => {\n    try {\n      const token = localStorage.getItem('token');\n\n      // Fakülteleri getir\n      const facultiesResponse = await axios({\n        method: 'get',\n        url: getApiUrl('/api/Faculties'),\n        headers: getApiHeaders(token),\n        timeout: 15000\n      });\n\n      // Bölümleri getir\n      const departmentsResponse = await axios({\n        method: 'get',\n        url: getApiUrl('/api/Departments'),\n        headers: getApiHeaders(token),\n        timeout: 15000\n      });\n      setFaculties(facultiesResponse.data.items || []);\n      setDepartments(departmentsResponse.data.items || []);\n    } catch (err) {\n      console.error('Fakülte ve bölüm verileri getirme hatası:', err);\n    }\n  };\n\n  // Öğrenci verilerini doğru yapıya dönüştüren yardımcı fonksiyon\n  const processStudentData = students => {\n    return students.map(student => {\n      // Öğrenci için isim oluştur\n      let displayName = 'Student';\n      if (student.firstName && student.lastName) {\n        displayName = `${student.firstName} ${student.lastName}`;\n      } else if (student.name) {\n        displayName = student.name;\n      } else if (student.userName) {\n        displayName = student.userName;\n      } else if (student.displayName) {\n        displayName = student.displayName;\n      } else if (student.studentNumber) {\n        displayName = `Student ${student.studentNumber}`;\n      } else if (student.studentId) {\n        displayName = `Student ${student.studentId}`;\n      } else if (student.id) {\n        displayName = `Student ${student.id}`;\n      }\n\n      // E-posta oluştur\n      const email = student.email || `${student.studentNumber || student.studentId || 'student'}@university.edu`;\n      return {\n        ...student,\n        email,\n        displayName\n      };\n    });\n  };\n\n  // Fetch students from API\n  const fetchStudents = async () => {\n    try {\n      setLoading(true);\n\n      // Get the token from localStorage\n      const token = localStorage.getItem('token');\n\n      // API URL'ini consola yazdır\n      const apiUrl = getApiUrl(`/api/Students?PageIndex=${pageIndex}&PageSize=${pageSize}`);\n      console.log('API URL:', apiUrl);\n      console.log('Token:', token ? 'Mevcut' : 'Yok');\n\n      // API çağrısı - yeni headers yapılandırmasını kullan\n      const response = await axios({\n        method: 'get',\n        url: apiUrl,\n        headers: getApiHeaders(token),\n        responseType: 'json',\n        timeout: 15000 // 15 saniye timeout\n      });\n      console.log('API Response Status:', response.status);\n      console.log('API Response Type:', typeof response.data);\n\n      // HTML yanıtı kontrolü\n      if (typeof response.data === 'string' && response.data.includes('<!DOCTYPE html>')) {\n        console.log('HTML yanıtı alındı, bu bir Ngrok uyarısı olabilir');\n        setError('API HTML yanıtı döndü. Ngrok uyarısı atlatılamadı.');\n        setStudents([]);\n        setLoading(false);\n        return;\n      }\n\n      // Kısa bir veri önizlemesi göster (çok büyük değilse)\n      if (typeof response.data === 'string' && response.data.length < 1000) {\n        console.log('API Raw Response:', response.data);\n      } else if (typeof response.data === 'object') {\n        console.log('API Response Object:', typeof response.data === 'object' ? 'Object received' : 'Not an object');\n      }\n      let processedData = response.data;\n\n      // Yanıt bir string ise JSON olarak ayrıştırmayı dene\n      if (typeof response.data === 'string') {\n        try {\n          console.log('Response is string, trying to parse as JSON');\n          processedData = JSON.parse(response.data);\n          console.log('Parsed data:', processedData ? 'Available' : 'Empty');\n        } catch (parseError) {\n          console.error('Failed to parse response as JSON:', parseError);\n          setError('API JSON parsing error: ' + parseError.message);\n          setStudents([]);\n          setLoading(false);\n          return;\n        }\n      }\n\n      // Handle different response formats\n      if (processedData) {\n        if (Array.isArray(processedData)) {\n          // Direct array response\n          console.log('Response contains direct array with', processedData.length, 'items');\n          const resultData = processStudentData(processedData);\n          setStudents(resultData);\n          setTotalCount(processedData.length);\n          setTotalPages(Math.ceil(processedData.length / pageSize));\n          setError(null);\n        } else if (processedData.items && Array.isArray(processedData.items)) {\n          // Paginated response with items array\n          console.log('Response contains paginated items array with', processedData.items.length, 'items');\n          const resultData = processStudentData(processedData.items);\n          setStudents(resultData);\n          setTotalPages(processedData.pages || 1);\n          setTotalCount(processedData.count || 0);\n          setError(null);\n        } else if (Array.isArray(processedData.data)) {\n          // Alternatif API yanıtı formatı\n          console.log('Response contains data array with', processedData.data.length, 'items');\n          const resultData = processStudentData(processedData.data);\n          setStudents(resultData);\n          setTotalCount(processedData.data.length);\n          setTotalPages(Math.ceil(processedData.data.length / pageSize));\n          setError(null);\n        } else {\n          console.error('Unexpected API response format:', typeof processedData);\n          setStudents([]);\n          setTotalCount(0);\n          setTotalPages(1);\n          setError('Unexpected data format received from server');\n        }\n      } else {\n        console.log('No data in response');\n        setStudents([]);\n        setTotalCount(0);\n        setTotalPages(1);\n        setError('No data received from server');\n      }\n    } catch (err) {\n      console.error('API call failed:', err);\n      console.error('Error details:', err.message);\n      if (err.response) {\n        console.error('Error response:', err.response.status, err.response.data);\n        setDebugInfo({\n          errorStatus: err.response.status,\n          errorData: JSON.stringify(err.response.data)\n        });\n      }\n      setStudents([]);\n      setTotalCount(0);\n      setTotalPages(1);\n      setError(`API Hatası: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch students when component mounts or pagination changes\n  useEffect(() => {\n    fetchStudents();\n  }, [pageIndex, pageSize]);\n\n  // Fakülte ve bölüm verilerini sayfa yüklendiğinde bir kez getir\n  useEffect(() => {\n    fetchFacultiesAndDepartments();\n  }, []);\n\n  // Handle pagination change\n  const handlePageChange = newPage => {\n    if (newPage >= 0 && newPage < totalPages) {\n      setPageIndex(newPage);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: container,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      style: header,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/iyte-logo.png\",\n        alt: \"Logo\",\n        style: logoStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: titleStyle,\n        children: \"\\xD6\\u011Frenci Y\\xF6netim Sistemi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        style: logoutBtnStyle,\n        children: \"\\xC7\\u0131k\\u0131\\u015F Yap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      style: main,\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#f8d7da',\n          color: '#721c24',\n          padding: '10px',\n          margin: '10px',\n          borderRadius: '4px'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#e2f3ff',\n          color: '#0c5460',\n          padding: '10px',\n          margin: '10px',\n          borderRadius: '4px',\n          fontSize: '12px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Debug Info:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(debugInfo, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'flex-end',\n          marginBottom: '1rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowAddForm(!showAddForm),\n          style: addButtonStyle,\n          children: showAddForm ? 'Formu Kapat' : 'Yeni Öğrenci Ekle'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), showAddForm && /*#__PURE__*/_jsxDEV(StudentForm, {\n        onStudentAdded: fetchStudents,\n        faculties: faculties,\n        departments: departments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StudentTable, {\n        students: students,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange(pageIndex - 1),\n          disabled: pageIndex === 0 || loading,\n          style: {\n            margin: '0 10px',\n            padding: '5px 10px'\n          },\n          children: \"\\xD6nceki\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            margin: '0 10px',\n            padding: '5px 10px'\n          },\n          children: [\"Sayfa \", pageIndex + 1, \" / \", totalPages, \" (\", totalCount, \" \\xF6\\u011Frenci)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange(pageIndex + 1),\n          disabled: pageIndex === totalPages - 1 || loading,\n          style: {\n            margin: '0 10px',\n            padding: '5px 10px'\n          },\n          children: \"Sonraki\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"FA/jK8WnUPJlC6ichWiXgCCCLPk=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nconst container = {\n  fontFamily: 'Arial, sans-serif'\n};\nconst header = {\n  background: 'linear-gradient(to right, #7b1fa2, #a0181b)',\n  color: 'white',\n  padding: '10px 30px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  boxShadow: '0 2px 10px rgba(0,0,0,0.1)'\n};\nconst logoStyle = {\n  height: '40px',\n  marginRight: '20px'\n};\nconst titleStyle = {\n  margin: 0,\n  fontSize: '1.8rem',\n  fontWeight: '500'\n};\nconst logoutBtnStyle = {\n  padding: '8px 16px',\n  backgroundColor: 'rgba(255, 255, 255, 0.2)',\n  color: 'white',\n  border: 'none',\n  borderRadius: '4px',\n  cursor: 'pointer',\n  fontWeight: 'bold'\n};\nconst main = {\n  padding: '20px',\n  maxWidth: '1300px',\n  margin: '0 auto'\n};\nconst addButtonStyle = {\n  padding: '10px 20px',\n  backgroundColor: '#7b1fa2',\n  color: 'white',\n  border: 'none',\n  borderRadius: '4px',\n  cursor: 'pointer',\n  fontWeight: 'bold'\n};\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","getApiUrl","getApiHeaders","StudentTable","StudentForm","jsxDEV","_jsxDEV","Dashboard","_s","navigate","students","setStudents","loading","setLoading","error","setError","debugInfo","setDebugInfo","pageIndex","setPageIndex","pageSize","setPageSize","totalPages","setTotalPages","totalCount","setTotalCount","showAddForm","setShowAddForm","departments","setDepartments","faculties","setFaculties","handleLogout","localStorage","removeItem","fetchFacultiesAndDepartments","token","getItem","facultiesResponse","method","url","headers","timeout","departmentsResponse","data","items","err","console","processStudentData","map","student","displayName","firstName","lastName","name","userName","studentNumber","studentId","id","email","fetchStudents","apiUrl","log","response","responseType","status","includes","length","processedData","JSON","parse","parseError","message","Array","isArray","resultData","Math","ceil","pages","count","errorStatus","errorData","stringify","handlePageChange","newPage","style","container","children","header","src","alt","logoStyle","fileName","_jsxFileName","lineNumber","columnNumber","titleStyle","onClick","logoutBtnStyle","main","backgroundColor","color","padding","margin","borderRadius","fontSize","display","justifyContent","marginBottom","addButtonStyle","onStudentAdded","marginTop","disabled","_c","fontFamily","background","alignItems","boxShadow","height","marginRight","fontWeight","border","cursor","maxWidth","$RefreshReg$"],"sources":["/Users/yigit/Projects/GradReq/gms-main/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { getApiUrl, getApiHeaders } from '../config/api';\nimport StudentTable from '../components/common/StudentTable';\nimport StudentForm from '../components/common/StudentForm';\n\nconst Dashboard = () => {\n  const navigate = useNavigate();\n  const [students, setStudents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [debugInfo, setDebugInfo] = useState(null);\n  \n  // Pagination state\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pageSize, setPageSize] = useState(10);\n  const [totalPages, setTotalPages] = useState(1);\n  const [totalCount, setTotalCount] = useState(0);\n\n  // Öğrenci ekleme formu state'leri\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [departments, setDepartments] = useState([]);\n  const [faculties, setFaculties] = useState([]);\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('tokenExpiration');\n    navigate('/');\n  };\n\n  // Fakülte ve bölüm verilerini getir\n  const fetchFacultiesAndDepartments = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      \n      // Fakülteleri getir\n      const facultiesResponse = await axios({\n        method: 'get',\n        url: getApiUrl('/api/Faculties'),\n        headers: getApiHeaders(token),\n        timeout: 15000\n      });\n      \n      // Bölümleri getir\n      const departmentsResponse = await axios({\n        method: 'get',\n        url: getApiUrl('/api/Departments'),\n        headers: getApiHeaders(token),\n        timeout: 15000\n      });\n      \n      setFaculties(facultiesResponse.data.items || []);\n      setDepartments(departmentsResponse.data.items || []);\n      \n    } catch (err) {\n      console.error('Fakülte ve bölüm verileri getirme hatası:', err);\n    }\n  };\n\n  // Öğrenci verilerini doğru yapıya dönüştüren yardımcı fonksiyon\n  const processStudentData = (students) => {\n    return students.map(student => {\n      // Öğrenci için isim oluştur\n      let displayName = 'Student';\n      if (student.firstName && student.lastName) {\n        displayName = `${student.firstName} ${student.lastName}`;\n      } else if (student.name) {\n        displayName = student.name;\n      } else if (student.userName) {\n        displayName = student.userName;\n      } else if (student.displayName) {\n        displayName = student.displayName;\n      } else if (student.studentNumber) {\n        displayName = `Student ${student.studentNumber}`;\n      } else if (student.studentId) {\n        displayName = `Student ${student.studentId}`;\n      } else if (student.id) {\n        displayName = `Student ${student.id}`;\n      }\n      \n      // E-posta oluştur\n      const email = student.email || \n        `${student.studentNumber || student.studentId || 'student'}@university.edu`;\n      \n      return {\n        ...student,\n        email,\n        displayName\n      };\n    });\n  };\n\n  // Fetch students from API\n  const fetchStudents = async () => {\n    try {\n      setLoading(true);\n      \n      // Get the token from localStorage\n      const token = localStorage.getItem('token');\n      \n      // API URL'ini consola yazdır\n      const apiUrl = getApiUrl(`/api/Students?PageIndex=${pageIndex}&PageSize=${pageSize}`);\n      console.log('API URL:', apiUrl);\n      console.log('Token:', token ? 'Mevcut' : 'Yok');\n      \n      // API çağrısı - yeni headers yapılandırmasını kullan\n      const response = await axios({\n        method: 'get',\n        url: apiUrl,\n        headers: getApiHeaders(token),\n        responseType: 'json',\n        timeout: 15000 // 15 saniye timeout\n      });\n      \n      console.log('API Response Status:', response.status);\n      console.log('API Response Type:', typeof response.data);\n      \n      // HTML yanıtı kontrolü\n      if (typeof response.data === 'string' && response.data.includes('<!DOCTYPE html>')) {\n        console.log('HTML yanıtı alındı, bu bir Ngrok uyarısı olabilir');\n        setError('API HTML yanıtı döndü. Ngrok uyarısı atlatılamadı.');\n        setStudents([]);\n        setLoading(false);\n        return;\n      }\n      \n      // Kısa bir veri önizlemesi göster (çok büyük değilse)\n      if (typeof response.data === 'string' && response.data.length < 1000) {\n        console.log('API Raw Response:', response.data);\n      } else if (typeof response.data === 'object') {\n        console.log('API Response Object:', typeof response.data === 'object' ? 'Object received' : 'Not an object');\n      }\n      \n      let processedData = response.data;\n      \n      // Yanıt bir string ise JSON olarak ayrıştırmayı dene\n      if (typeof response.data === 'string') {\n        try {\n          console.log('Response is string, trying to parse as JSON');\n          processedData = JSON.parse(response.data);\n          console.log('Parsed data:', processedData ? 'Available' : 'Empty');\n        } catch (parseError) {\n          console.error('Failed to parse response as JSON:', parseError);\n          setError('API JSON parsing error: ' + parseError.message);\n          setStudents([]);\n          setLoading(false);\n          return;\n        }\n      }\n      \n      // Handle different response formats\n      if (processedData) {\n        if (Array.isArray(processedData)) {\n          // Direct array response\n          console.log('Response contains direct array with', processedData.length, 'items');\n          const resultData = processStudentData(processedData);\n          setStudents(resultData);\n          setTotalCount(processedData.length);\n          setTotalPages(Math.ceil(processedData.length / pageSize));\n          setError(null);\n        } else if (processedData.items && Array.isArray(processedData.items)) {\n          // Paginated response with items array\n          console.log('Response contains paginated items array with', processedData.items.length, 'items');\n          const resultData = processStudentData(processedData.items);\n          setStudents(resultData);\n          setTotalPages(processedData.pages || 1);\n          setTotalCount(processedData.count || 0);\n          setError(null);\n        } else if (Array.isArray(processedData.data)) {\n          // Alternatif API yanıtı formatı\n          console.log('Response contains data array with', processedData.data.length, 'items');\n          const resultData = processStudentData(processedData.data);\n          setStudents(resultData);\n          setTotalCount(processedData.data.length);\n          setTotalPages(Math.ceil(processedData.data.length / pageSize));\n          setError(null);\n        } else {\n          console.error('Unexpected API response format:', typeof processedData);\n          setStudents([]);\n          setTotalCount(0);\n          setTotalPages(1);\n          setError('Unexpected data format received from server');\n        }\n      } else {\n        console.log('No data in response');\n        setStudents([]);\n        setTotalCount(0);\n        setTotalPages(1);\n        setError('No data received from server');\n      }\n    } catch (err) {\n      console.error('API call failed:', err);\n      console.error('Error details:', err.message);\n      if (err.response) {\n        console.error('Error response:', err.response.status, err.response.data);\n        setDebugInfo({\n          errorStatus: err.response.status,\n          errorData: JSON.stringify(err.response.data)\n        });\n      }\n      \n      setStudents([]);\n      setTotalCount(0);\n      setTotalPages(1);\n      setError(`API Hatası: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch students when component mounts or pagination changes\n  useEffect(() => {\n    fetchStudents();\n  }, [pageIndex, pageSize]);\n\n  // Fakülte ve bölüm verilerini sayfa yüklendiğinde bir kez getir\n  useEffect(() => {\n    fetchFacultiesAndDepartments();\n  }, []);\n\n  // Handle pagination change\n  const handlePageChange = (newPage) => {\n    if (newPage >= 0 && newPage < totalPages) {\n      setPageIndex(newPage);\n    }\n  };\n\n  return (\n    <div style={container}>\n      <header style={header}>\n        <img src=\"/iyte-logo.png\" alt=\"Logo\" style={logoStyle} />\n        <h1 style={titleStyle}>Öğrenci Yönetim Sistemi</h1>\n        <button onClick={handleLogout} style={logoutBtnStyle}>Çıkış Yap</button>\n      </header>\n\n      <main style={main}>\n        {error && (\n          <div style={{ backgroundColor: '#f8d7da', color: '#721c24', padding: '10px', margin: '10px', borderRadius: '4px' }}>\n            {error}\n          </div>\n        )}\n        \n        {debugInfo && (\n          <div style={{ backgroundColor: '#e2f3ff', color: '#0c5460', padding: '10px', margin: '10px', borderRadius: '4px', fontSize: '12px' }}>\n            <strong>Debug Info:</strong>\n            <pre>{JSON.stringify(debugInfo, null, 2)}</pre>\n          </div>\n        )}\n        \n        {/* Öğrenci Ekle Butonu */}\n        <div style={{ display: 'flex', justifyContent: 'flex-end', marginBottom: '1rem' }}>\n          <button \n            onClick={() => setShowAddForm(!showAddForm)}\n            style={addButtonStyle}\n          >\n            {showAddForm ? 'Formu Kapat' : 'Yeni Öğrenci Ekle'}\n          </button>\n        </div>\n\n        {/* Öğrenci Ekleme Formu - Ayrı bileşenden çağırılıyor */}\n        {showAddForm && (\n          <StudentForm \n            onStudentAdded={fetchStudents} \n            faculties={faculties} \n            departments={departments} \n          />\n        )}\n        \n        <StudentTable students={students} loading={loading} />\n        \n        {/* Pagination controls */}\n        {totalPages > 1 && (\n          <div style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}>\n            <button \n              onClick={() => handlePageChange(pageIndex - 1)} \n              disabled={pageIndex === 0 || loading}\n              style={{ margin: '0 10px', padding: '5px 10px' }}\n            >\n              Önceki\n            </button>\n            <span style={{ margin: '0 10px', padding: '5px 10px' }}>\n              Sayfa {pageIndex + 1} / {totalPages} ({totalCount} öğrenci)\n            </span>\n            <button \n              onClick={() => handlePageChange(pageIndex + 1)} \n              disabled={pageIndex === totalPages - 1 || loading}\n              style={{ margin: '0 10px', padding: '5px 10px' }}\n            >\n              Sonraki\n            </button>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nconst container = {\n  fontFamily: 'Arial, sans-serif',\n};\n\nconst header = {\n  background: 'linear-gradient(to right, #7b1fa2, #a0181b)',\n  color: 'white',\n  padding: '10px 30px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  boxShadow: '0 2px 10px rgba(0,0,0,0.1)',\n};\n\nconst logoStyle = {\n  height: '40px',\n  marginRight: '20px',\n};\n\nconst titleStyle = {\n  margin: 0,\n  fontSize: '1.8rem',\n  fontWeight: '500',\n};\n\nconst logoutBtnStyle = {\n  padding: '8px 16px',\n  backgroundColor: 'rgba(255, 255, 255, 0.2)',\n  color: 'white',\n  border: 'none',\n  borderRadius: '4px',\n  cursor: 'pointer',\n  fontWeight: 'bold',\n};\n\nconst main = {\n  padding: '20px',\n  maxWidth: '1300px',\n  margin: '0 auto',\n};\n\nconst addButtonStyle = {\n  padding: '10px 20px',\n  backgroundColor: '#7b1fa2',\n  color: 'white',\n  border: 'none',\n  borderRadius: '4px',\n  cursor: 'pointer',\n  fontWeight: 'bold',\n};\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}