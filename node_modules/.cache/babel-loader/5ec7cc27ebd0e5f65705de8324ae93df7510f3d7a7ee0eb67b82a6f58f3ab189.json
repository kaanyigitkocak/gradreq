{"ast":null,"code":"var _jsxFileName = \"/Users/yigit/Projects/GradReq/gms-main/src/pages/StudentDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { getApiUrl, getApiHeaders } from '../config/api';\nimport StudentTable from '../components/common/StudentTable';\nimport { getUserDetails } from '../utils/authUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentDashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [students, setStudents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [debugInfo, setDebugInfo] = useState(null);\n  const userDetails = getUserDetails();\n\n  // Pagination state\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pageSize, setPageSize] = useState(10);\n  const [totalPages, setTotalPages] = useState(1);\n  const [totalCount, setTotalCount] = useState(0);\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('tokenExpiration');\n    navigate('/');\n  };\n\n  // Öğrenci verilerini doğru yapıya dönüştüren yardımcı fonksiyon\n  const processStudentData = students => {\n    return students.map(student => {\n      // Öğrenci için isim oluştur\n      let displayName = 'Student';\n      if (student.firstName && student.lastName) {\n        displayName = `${student.firstName} ${student.lastName}`;\n      } else if (student.name) {\n        displayName = student.name;\n      } else if (student.userName) {\n        displayName = student.userName;\n      } else if (student.displayName) {\n        displayName = student.displayName;\n      } else if (student.studentNumber) {\n        displayName = `Student ${student.studentNumber}`;\n      } else if (student.studentId) {\n        displayName = `Student ${student.studentId}`;\n      } else if (student.id) {\n        displayName = `Student ${student.id}`;\n      }\n\n      // E-posta oluştur\n      const email = student.email || `${student.studentNumber || student.studentId || 'student'}@university.edu`;\n      return {\n        ...student,\n        email,\n        displayName\n      };\n    });\n  };\n\n  // Fetch students from API\n  useEffect(() => {\n    const fetchStudents = async () => {\n      try {\n        setLoading(true);\n\n        // Get the token from localStorage\n        const token = localStorage.getItem('token');\n\n        // API URL'ini consola yazdır\n        const apiUrl = getApiUrl(`/api/Students?PageIndex=${pageIndex}&PageSize=${pageSize}`);\n        console.log('API URL:', apiUrl);\n        console.log('Token:', token ? 'Mevcut' : 'Yok');\n\n        // API çağrısı - yeni headers yapılandırmasını kullan\n        const response = await axios({\n          method: 'get',\n          url: apiUrl,\n          headers: getApiHeaders(token),\n          responseType: 'json',\n          timeout: 15000 // 15 saniye timeout\n        });\n        console.log('API Response Status:', response.status);\n        console.log('API Response Type:', typeof response.data);\n\n        // HTML yanıtı kontrolü\n        if (typeof response.data === 'string' && response.data.includes('<!DOCTYPE html>')) {\n          console.log('HTML yanıtı alındı, bu bir Ngrok uyarısı olabilir');\n          setError('API HTML yanıtı döndü. Ngrok uyarısı atlatılamadı.');\n          setStudents([]);\n          setLoading(false);\n          return;\n        }\n\n        // Kısa bir veri önizlemesi göster (çok büyük değilse)\n        if (typeof response.data === 'string' && response.data.length < 1000) {\n          console.log('API Raw Response:', response.data);\n        } else if (typeof response.data === 'object') {\n          console.log('API Response Object:', typeof response.data === 'object' ? 'Object received' : 'Not an object');\n        }\n        let processedData = response.data;\n\n        // Yanıt bir string ise JSON olarak ayrıştırmayı dene\n        if (typeof response.data === 'string') {\n          try {\n            console.log('Response is string, trying to parse as JSON');\n            processedData = JSON.parse(response.data);\n            console.log('Parsed data:', processedData ? 'Available' : 'Empty');\n          } catch (parseError) {\n            console.error('Failed to parse response as JSON:', parseError);\n            setError('API JSON parsing error: ' + parseError.message);\n            setStudents([]);\n            setLoading(false);\n            return;\n          }\n        }\n\n        // Handle different response formats\n        if (processedData) {\n          if (Array.isArray(processedData)) {\n            // Direct array response\n            console.log('Response contains direct array with', processedData.length, 'items');\n            const resultData = processStudentData(processedData);\n            setStudents(resultData);\n            setTotalCount(processedData.length);\n            setTotalPages(Math.ceil(processedData.length / pageSize));\n            setError(null);\n          } else if (processedData.items && Array.isArray(processedData.items)) {\n            // Paginated response with items array\n            console.log('Response contains paginated items array with', processedData.items.length, 'items');\n            const resultData = processStudentData(processedData.items);\n            setStudents(resultData);\n            setTotalPages(processedData.pages || 1);\n            setTotalCount(processedData.count || 0);\n            setError(null);\n          } else if (Array.isArray(processedData.data)) {\n            // Alternatif API yanıtı formatı\n            console.log('Response contains data array with', processedData.data.length, 'items');\n            const resultData = processStudentData(processedData.data);\n            setStudents(resultData);\n            setTotalCount(processedData.data.length);\n            setTotalPages(Math.ceil(processedData.data.length / pageSize));\n            setError(null);\n          } else {\n            console.error('Unexpected API response format:', typeof processedData);\n            setStudents([]);\n            setTotalCount(0);\n            setTotalPages(1);\n            setError('Unexpected data format received from server');\n          }\n        } else {\n          console.log('No data in response');\n          setStudents([]);\n          setTotalCount(0);\n          setTotalPages(1);\n          setError('No data received from server');\n        }\n      } catch (err) {\n        console.error('Failed to fetch students:', err);\n        console.error('Error details:', err.message);\n        if (err.response) {\n          console.error('Error response:', err.response.status, err.response.data);\n          setDebugInfo({\n            errorStatus: err.response.status,\n            errorData: JSON.stringify(err.response.data)\n          });\n        }\n        setStudents([]);\n        setTotalCount(0);\n        setTotalPages(1);\n        setError(`Failed to load students: ${err.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchStudents();\n  }, [pageIndex, pageSize]); // Re-fetch when pagination changes\n\n  // Handle pagination change\n  const handlePageChange = newPage => {\n    if (newPage >= 0 && newPage < totalPages) {\n      setPageIndex(newPage);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: container,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      style: header,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/iyte-logo.png\",\n        alt: \"Logo\",\n        style: logoStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: titleStyle,\n        children: \"Graduation Management System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        style: logoutBtnStyle,\n        children: \"Log Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      style: main,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", (userDetails === null || userDetails === void 0 ? void 0 : userDetails.email) || 'Student']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#f8d7da',\n          color: '#721c24',\n          padding: '10px',\n          margin: '10px',\n          borderRadius: '4px'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#e2f3ff',\n          color: '#0c5460',\n          padding: '10px',\n          margin: '10px',\n          borderRadius: '4px',\n          fontSize: '12px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Debug Info:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(debugInfo, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StudentTable, {\n        students: students,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange(pageIndex - 1),\n          disabled: pageIndex === 0 || loading,\n          style: {\n            margin: '0 10px',\n            padding: '5px 10px'\n          },\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            margin: '0 10px',\n            padding: '5px 10px'\n          },\n          children: [\"Page \", pageIndex + 1, \" of \", totalPages, \" (\", totalCount, \" items)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange(pageIndex + 1),\n          disabled: pageIndex === totalPages - 1 || loading,\n          style: {\n            margin: '0 10px',\n            padding: '5px 10px'\n          },\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentDashboard, \"xb7AcBz1RdrM6WfRNZdlbpRRIhQ=\", false, function () {\n  return [useNavigate];\n});\n_c = StudentDashboard;\nconst container = {\n  fontFamily: 'Arial, sans-serif'\n};\nconst header = {\n  background: 'linear-gradient(to right, #7b1fa2, #a0181b)',\n  color: 'white',\n  padding: '10px 30px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  boxShadow: '0 2px 10px rgba(0,0,0,0.1)'\n};\nconst logoStyle = {\n  height: '40px'\n};\nconst titleStyle = {\n  flexGrow: 1,\n  textAlign: 'center',\n  fontSize: '20px',\n  fontWeight: '600',\n  margin: 0\n};\nconst logoutBtnStyle = {\n  width: '100px',\n  height: '50px',\n  backgroundColor: 'transparent',\n  color: 'white',\n  border: '2px solid white',\n  borderRadius: '6px',\n  fontSize: '13px',\n  fontWeight: 'bold',\n  cursor: 'pointer'\n};\nconst main = {\n  padding: '2rem'\n};\nexport default StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","getApiUrl","getApiHeaders","StudentTable","getUserDetails","jsxDEV","_jsxDEV","StudentDashboard","_s","navigate","students","setStudents","loading","setLoading","error","setError","debugInfo","setDebugInfo","userDetails","pageIndex","setPageIndex","pageSize","setPageSize","totalPages","setTotalPages","totalCount","setTotalCount","handleLogout","localStorage","removeItem","processStudentData","map","student","displayName","firstName","lastName","name","userName","studentNumber","studentId","id","email","fetchStudents","token","getItem","apiUrl","console","log","response","method","url","headers","responseType","timeout","status","data","includes","length","processedData","JSON","parse","parseError","message","Array","isArray","resultData","Math","ceil","items","pages","count","err","errorStatus","errorData","stringify","handlePageChange","newPage","style","container","children","header","src","alt","logoStyle","fileName","_jsxFileName","lineNumber","columnNumber","titleStyle","onClick","logoutBtnStyle","main","backgroundColor","color","padding","margin","borderRadius","fontSize","display","justifyContent","marginTop","disabled","_c","fontFamily","background","alignItems","boxShadow","height","flexGrow","textAlign","fontWeight","width","border","cursor","$RefreshReg$"],"sources":["/Users/yigit/Projects/GradReq/gms-main/src/pages/StudentDashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { getApiUrl, getApiHeaders } from '../config/api';\nimport StudentTable from '../components/common/StudentTable';\nimport { getUserDetails } from '../utils/authUtils';\n\nconst StudentDashboard = () => {\n  const navigate = useNavigate();\n  const [students, setStudents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [debugInfo, setDebugInfo] = useState(null);\n  const userDetails = getUserDetails();\n  \n  // Pagination state\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pageSize, setPageSize] = useState(10);\n  const [totalPages, setTotalPages] = useState(1);\n  const [totalCount, setTotalCount] = useState(0);\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('tokenExpiration');\n    navigate('/');\n  };\n\n  // Öğrenci verilerini doğru yapıya dönüştüren yardımcı fonksiyon\n  const processStudentData = (students) => {\n    return students.map(student => {\n      // Öğrenci için isim oluştur\n      let displayName = 'Student';\n      if (student.firstName && student.lastName) {\n        displayName = `${student.firstName} ${student.lastName}`;\n      } else if (student.name) {\n        displayName = student.name;\n      } else if (student.userName) {\n        displayName = student.userName;\n      } else if (student.displayName) {\n        displayName = student.displayName;\n      } else if (student.studentNumber) {\n        displayName = `Student ${student.studentNumber}`;\n      } else if (student.studentId) {\n        displayName = `Student ${student.studentId}`;\n      } else if (student.id) {\n        displayName = `Student ${student.id}`;\n      }\n      \n      // E-posta oluştur\n      const email = student.email || \n        `${student.studentNumber || student.studentId || 'student'}@university.edu`;\n      \n      return {\n        ...student,\n        email,\n        displayName\n      };\n    });\n  };\n\n  // Fetch students from API\n  useEffect(() => {\n    const fetchStudents = async () => {\n      try {\n        setLoading(true);\n        \n        // Get the token from localStorage\n        const token = localStorage.getItem('token');\n        \n        // API URL'ini consola yazdır\n        const apiUrl = getApiUrl(`/api/Students?PageIndex=${pageIndex}&PageSize=${pageSize}`);\n        console.log('API URL:', apiUrl);\n        console.log('Token:', token ? 'Mevcut' : 'Yok');\n        \n        // API çağrısı - yeni headers yapılandırmasını kullan\n        const response = await axios({\n          method: 'get',\n          url: apiUrl,\n          headers: getApiHeaders(token),\n          responseType: 'json',\n          timeout: 15000 // 15 saniye timeout\n        });\n        \n        console.log('API Response Status:', response.status);\n        console.log('API Response Type:', typeof response.data);\n        \n        // HTML yanıtı kontrolü\n        if (typeof response.data === 'string' && response.data.includes('<!DOCTYPE html>')) {\n          console.log('HTML yanıtı alındı, bu bir Ngrok uyarısı olabilir');\n          setError('API HTML yanıtı döndü. Ngrok uyarısı atlatılamadı.');\n          setStudents([]);\n          setLoading(false);\n          return;\n        }\n        \n        // Kısa bir veri önizlemesi göster (çok büyük değilse)\n        if (typeof response.data === 'string' && response.data.length < 1000) {\n          console.log('API Raw Response:', response.data);\n        } else if (typeof response.data === 'object') {\n          console.log('API Response Object:', typeof response.data === 'object' ? 'Object received' : 'Not an object');\n        }\n        \n        let processedData = response.data;\n        \n        // Yanıt bir string ise JSON olarak ayrıştırmayı dene\n        if (typeof response.data === 'string') {\n          try {\n            console.log('Response is string, trying to parse as JSON');\n            processedData = JSON.parse(response.data);\n            console.log('Parsed data:', processedData ? 'Available' : 'Empty');\n          } catch (parseError) {\n            console.error('Failed to parse response as JSON:', parseError);\n            setError('API JSON parsing error: ' + parseError.message);\n            setStudents([]);\n            setLoading(false);\n            return;\n          }\n        }\n        \n        // Handle different response formats\n        if (processedData) {\n          if (Array.isArray(processedData)) {\n            // Direct array response\n            console.log('Response contains direct array with', processedData.length, 'items');\n            const resultData = processStudentData(processedData);\n            setStudents(resultData);\n            setTotalCount(processedData.length);\n            setTotalPages(Math.ceil(processedData.length / pageSize));\n            setError(null);\n          } else if (processedData.items && Array.isArray(processedData.items)) {\n            // Paginated response with items array\n            console.log('Response contains paginated items array with', processedData.items.length, 'items');\n            const resultData = processStudentData(processedData.items);\n            setStudents(resultData);\n            setTotalPages(processedData.pages || 1);\n            setTotalCount(processedData.count || 0);\n            setError(null);\n          } else if (Array.isArray(processedData.data)) {\n            // Alternatif API yanıtı formatı\n            console.log('Response contains data array with', processedData.data.length, 'items');\n            const resultData = processStudentData(processedData.data);\n            setStudents(resultData);\n            setTotalCount(processedData.data.length);\n            setTotalPages(Math.ceil(processedData.data.length / pageSize));\n            setError(null);\n          } else {\n            console.error('Unexpected API response format:', typeof processedData);\n            setStudents([]);\n            setTotalCount(0);\n            setTotalPages(1);\n            setError('Unexpected data format received from server');\n          }\n        } else {\n          console.log('No data in response');\n          setStudents([]);\n          setTotalCount(0);\n          setTotalPages(1);\n          setError('No data received from server');\n        }\n      } catch (err) {\n        console.error('Failed to fetch students:', err);\n        console.error('Error details:', err.message);\n        if (err.response) {\n          console.error('Error response:', err.response.status, err.response.data);\n          setDebugInfo({\n            errorStatus: err.response.status,\n            errorData: JSON.stringify(err.response.data)\n          });\n        }\n        \n        setStudents([]);\n        setTotalCount(0);\n        setTotalPages(1);\n        setError(`Failed to load students: ${err.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchStudents();\n  }, [pageIndex, pageSize]); // Re-fetch when pagination changes\n\n  // Handle pagination change\n  const handlePageChange = (newPage) => {\n    if (newPage >= 0 && newPage < totalPages) {\n      setPageIndex(newPage);\n    }\n  };\n\n  return (\n    <div style={container}>\n      <header style={header}>\n        <img src=\"/iyte-logo.png\" alt=\"Logo\" style={logoStyle} />\n        <h1 style={titleStyle}>Graduation Management System</h1>\n        <button onClick={handleLogout} style={logoutBtnStyle}>Log Out</button>\n      </header>\n\n      <main style={main}>\n        <h2>Welcome, {userDetails?.email || 'Student'}</h2>\n        \n        {error && (\n          <div style={{ backgroundColor: '#f8d7da', color: '#721c24', padding: '10px', margin: '10px', borderRadius: '4px' }}>\n            {error}\n          </div>\n        )}\n        \n        {debugInfo && (\n          <div style={{ backgroundColor: '#e2f3ff', color: '#0c5460', padding: '10px', margin: '10px', borderRadius: '4px', fontSize: '12px' }}>\n            <strong>Debug Info:</strong>\n            <pre>{JSON.stringify(debugInfo, null, 2)}</pre>\n          </div>\n        )}\n        \n        <StudentTable students={students} loading={loading} />\n        \n        {/* Pagination controls */}\n        {totalPages > 1 && (\n          <div style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}>\n            <button \n              onClick={() => handlePageChange(pageIndex - 1)} \n              disabled={pageIndex === 0 || loading}\n              style={{ margin: '0 10px', padding: '5px 10px' }}\n            >\n              Previous\n            </button>\n            <span style={{ margin: '0 10px', padding: '5px 10px' }}>\n              Page {pageIndex + 1} of {totalPages} ({totalCount} items)\n            </span>\n            <button \n              onClick={() => handlePageChange(pageIndex + 1)} \n              disabled={pageIndex === totalPages - 1 || loading}\n              style={{ margin: '0 10px', padding: '5px 10px' }}\n            >\n              Next\n            </button>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nconst container = {\n  fontFamily: 'Arial, sans-serif',\n};\n\nconst header = {\n  background: 'linear-gradient(to right, #7b1fa2, #a0181b)',\n  color: 'white',\n  padding: '10px 30px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  boxShadow: '0 2px 10px rgba(0,0,0,0.1)',\n};\n\nconst logoStyle = {\n  height: '40px',\n};\n\nconst titleStyle = {\n  flexGrow: 1,\n  textAlign: 'center',\n  fontSize: '20px',\n  fontWeight: '600',\n  margin: 0,\n};\n\nconst logoutBtnStyle = {\n  width: '100px',\n  height: '50px',\n  backgroundColor: 'transparent',\n  color: 'white',\n  border: '2px solid white',\n  borderRadius: '6px',\n  fontSize: '13px',\n  fontWeight: 'bold',\n  cursor: 'pointer',\n};\n\nconst main = {\n  padding: '2rem',\n};\n\nexport default StudentDashboard; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,aAAa,QAAQ,eAAe;AACxD,OAAOC,YAAY,MAAM,mCAAmC;AAC5D,SAASC,cAAc,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAMoB,WAAW,GAAGd,cAAc,CAAC,CAAC;;EAEpC;EACA,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACyB,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAAC2B,UAAU,EAAEC,aAAa,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC;EAE/C,MAAM6B,YAAY,GAAGA,CAAA,KAAM;IACzBC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAChCD,YAAY,CAACC,UAAU,CAAC,iBAAiB,CAAC;IAC1CpB,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;;EAED;EACA,MAAMqB,kBAAkB,GAAIpB,QAAQ,IAAK;IACvC,OAAOA,QAAQ,CAACqB,GAAG,CAACC,OAAO,IAAI;MAC7B;MACA,IAAIC,WAAW,GAAG,SAAS;MAC3B,IAAID,OAAO,CAACE,SAAS,IAAIF,OAAO,CAACG,QAAQ,EAAE;QACzCF,WAAW,GAAG,GAAGD,OAAO,CAACE,SAAS,IAAIF,OAAO,CAACG,QAAQ,EAAE;MAC1D,CAAC,MAAM,IAAIH,OAAO,CAACI,IAAI,EAAE;QACvBH,WAAW,GAAGD,OAAO,CAACI,IAAI;MAC5B,CAAC,MAAM,IAAIJ,OAAO,CAACK,QAAQ,EAAE;QAC3BJ,WAAW,GAAGD,OAAO,CAACK,QAAQ;MAChC,CAAC,MAAM,IAAIL,OAAO,CAACC,WAAW,EAAE;QAC9BA,WAAW,GAAGD,OAAO,CAACC,WAAW;MACnC,CAAC,MAAM,IAAID,OAAO,CAACM,aAAa,EAAE;QAChCL,WAAW,GAAG,WAAWD,OAAO,CAACM,aAAa,EAAE;MAClD,CAAC,MAAM,IAAIN,OAAO,CAACO,SAAS,EAAE;QAC5BN,WAAW,GAAG,WAAWD,OAAO,CAACO,SAAS,EAAE;MAC9C,CAAC,MAAM,IAAIP,OAAO,CAACQ,EAAE,EAAE;QACrBP,WAAW,GAAG,WAAWD,OAAO,CAACQ,EAAE,EAAE;MACvC;;MAEA;MACA,MAAMC,KAAK,GAAGT,OAAO,CAACS,KAAK,IACzB,GAAGT,OAAO,CAACM,aAAa,IAAIN,OAAO,CAACO,SAAS,IAAI,SAAS,iBAAiB;MAE7E,OAAO;QACL,GAAGP,OAAO;QACVS,KAAK;QACLR;MACF,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;;EAED;EACApC,SAAS,CAAC,MAAM;IACd,MAAM6C,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF7B,UAAU,CAAC,IAAI,CAAC;;QAEhB;QACA,MAAM8B,KAAK,GAAGf,YAAY,CAACgB,OAAO,CAAC,OAAO,CAAC;;QAE3C;QACA,MAAMC,MAAM,GAAG5C,SAAS,CAAC,2BAA2BkB,SAAS,aAAaE,QAAQ,EAAE,CAAC;QACrFyB,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,MAAM,CAAC;QAC/BC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEJ,KAAK,GAAG,QAAQ,GAAG,KAAK,CAAC;;QAE/C;QACA,MAAMK,QAAQ,GAAG,MAAMhD,KAAK,CAAC;UAC3BiD,MAAM,EAAE,KAAK;UACbC,GAAG,EAAEL,MAAM;UACXM,OAAO,EAAEjD,aAAa,CAACyC,KAAK,CAAC;UAC7BS,YAAY,EAAE,MAAM;UACpBC,OAAO,EAAE,KAAK,CAAC;QACjB,CAAC,CAAC;QAEFP,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEC,QAAQ,CAACM,MAAM,CAAC;QACpDR,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE,OAAOC,QAAQ,CAACO,IAAI,CAAC;;QAEvD;QACA,IAAI,OAAOP,QAAQ,CAACO,IAAI,KAAK,QAAQ,IAAIP,QAAQ,CAACO,IAAI,CAACC,QAAQ,CAAC,iBAAiB,CAAC,EAAE;UAClFV,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC;UAChEhC,QAAQ,CAAC,oDAAoD,CAAC;UAC9DJ,WAAW,CAAC,EAAE,CAAC;UACfE,UAAU,CAAC,KAAK,CAAC;UACjB;QACF;;QAEA;QACA,IAAI,OAAOmC,QAAQ,CAACO,IAAI,KAAK,QAAQ,IAAIP,QAAQ,CAACO,IAAI,CAACE,MAAM,GAAG,IAAI,EAAE;UACpEX,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,QAAQ,CAACO,IAAI,CAAC;QACjD,CAAC,MAAM,IAAI,OAAOP,QAAQ,CAACO,IAAI,KAAK,QAAQ,EAAE;UAC5CT,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAE,OAAOC,QAAQ,CAACO,IAAI,KAAK,QAAQ,GAAG,iBAAiB,GAAG,eAAe,CAAC;QAC9G;QAEA,IAAIG,aAAa,GAAGV,QAAQ,CAACO,IAAI;;QAEjC;QACA,IAAI,OAAOP,QAAQ,CAACO,IAAI,KAAK,QAAQ,EAAE;UACrC,IAAI;YACFT,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;YAC1DW,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACZ,QAAQ,CAACO,IAAI,CAAC;YACzCT,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEW,aAAa,GAAG,WAAW,GAAG,OAAO,CAAC;UACpE,CAAC,CAAC,OAAOG,UAAU,EAAE;YACnBf,OAAO,CAAChC,KAAK,CAAC,mCAAmC,EAAE+C,UAAU,CAAC;YAC9D9C,QAAQ,CAAC,0BAA0B,GAAG8C,UAAU,CAACC,OAAO,CAAC;YACzDnD,WAAW,CAAC,EAAE,CAAC;YACfE,UAAU,CAAC,KAAK,CAAC;YACjB;UACF;QACF;;QAEA;QACA,IAAI6C,aAAa,EAAE;UACjB,IAAIK,KAAK,CAACC,OAAO,CAACN,aAAa,CAAC,EAAE;YAChC;YACAZ,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEW,aAAa,CAACD,MAAM,EAAE,OAAO,CAAC;YACjF,MAAMQ,UAAU,GAAGnC,kBAAkB,CAAC4B,aAAa,CAAC;YACpD/C,WAAW,CAACsD,UAAU,CAAC;YACvBvC,aAAa,CAACgC,aAAa,CAACD,MAAM,CAAC;YACnCjC,aAAa,CAAC0C,IAAI,CAACC,IAAI,CAACT,aAAa,CAACD,MAAM,GAAGpC,QAAQ,CAAC,CAAC;YACzDN,QAAQ,CAAC,IAAI,CAAC;UAChB,CAAC,MAAM,IAAI2C,aAAa,CAACU,KAAK,IAAIL,KAAK,CAACC,OAAO,CAACN,aAAa,CAACU,KAAK,CAAC,EAAE;YACpE;YACAtB,OAAO,CAACC,GAAG,CAAC,8CAA8C,EAAEW,aAAa,CAACU,KAAK,CAACX,MAAM,EAAE,OAAO,CAAC;YAChG,MAAMQ,UAAU,GAAGnC,kBAAkB,CAAC4B,aAAa,CAACU,KAAK,CAAC;YAC1DzD,WAAW,CAACsD,UAAU,CAAC;YACvBzC,aAAa,CAACkC,aAAa,CAACW,KAAK,IAAI,CAAC,CAAC;YACvC3C,aAAa,CAACgC,aAAa,CAACY,KAAK,IAAI,CAAC,CAAC;YACvCvD,QAAQ,CAAC,IAAI,CAAC;UAChB,CAAC,MAAM,IAAIgD,KAAK,CAACC,OAAO,CAACN,aAAa,CAACH,IAAI,CAAC,EAAE;YAC5C;YACAT,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEW,aAAa,CAACH,IAAI,CAACE,MAAM,EAAE,OAAO,CAAC;YACpF,MAAMQ,UAAU,GAAGnC,kBAAkB,CAAC4B,aAAa,CAACH,IAAI,CAAC;YACzD5C,WAAW,CAACsD,UAAU,CAAC;YACvBvC,aAAa,CAACgC,aAAa,CAACH,IAAI,CAACE,MAAM,CAAC;YACxCjC,aAAa,CAAC0C,IAAI,CAACC,IAAI,CAACT,aAAa,CAACH,IAAI,CAACE,MAAM,GAAGpC,QAAQ,CAAC,CAAC;YAC9DN,QAAQ,CAAC,IAAI,CAAC;UAChB,CAAC,MAAM;YACL+B,OAAO,CAAChC,KAAK,CAAC,iCAAiC,EAAE,OAAO4C,aAAa,CAAC;YACtE/C,WAAW,CAAC,EAAE,CAAC;YACfe,aAAa,CAAC,CAAC,CAAC;YAChBF,aAAa,CAAC,CAAC,CAAC;YAChBT,QAAQ,CAAC,6CAA6C,CAAC;UACzD;QACF,CAAC,MAAM;UACL+B,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;UAClCpC,WAAW,CAAC,EAAE,CAAC;UACfe,aAAa,CAAC,CAAC,CAAC;UAChBF,aAAa,CAAC,CAAC,CAAC;UAChBT,QAAQ,CAAC,8BAA8B,CAAC;QAC1C;MACF,CAAC,CAAC,OAAOwD,GAAG,EAAE;QACZzB,OAAO,CAAChC,KAAK,CAAC,2BAA2B,EAAEyD,GAAG,CAAC;QAC/CzB,OAAO,CAAChC,KAAK,CAAC,gBAAgB,EAAEyD,GAAG,CAACT,OAAO,CAAC;QAC5C,IAAIS,GAAG,CAACvB,QAAQ,EAAE;UAChBF,OAAO,CAAChC,KAAK,CAAC,iBAAiB,EAAEyD,GAAG,CAACvB,QAAQ,CAACM,MAAM,EAAEiB,GAAG,CAACvB,QAAQ,CAACO,IAAI,CAAC;UACxEtC,YAAY,CAAC;YACXuD,WAAW,EAAED,GAAG,CAACvB,QAAQ,CAACM,MAAM;YAChCmB,SAAS,EAAEd,IAAI,CAACe,SAAS,CAACH,GAAG,CAACvB,QAAQ,CAACO,IAAI;UAC7C,CAAC,CAAC;QACJ;QAEA5C,WAAW,CAAC,EAAE,CAAC;QACfe,aAAa,CAAC,CAAC,CAAC;QAChBF,aAAa,CAAC,CAAC,CAAC;QAChBT,QAAQ,CAAC,4BAA4BwD,GAAG,CAACT,OAAO,EAAE,CAAC;MACrD,CAAC,SAAS;QACRjD,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAED6B,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACvB,SAAS,EAAEE,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE3B;EACA,MAAMsD,gBAAgB,GAAIC,OAAO,IAAK;IACpC,IAAIA,OAAO,IAAI,CAAC,IAAIA,OAAO,GAAGrD,UAAU,EAAE;MACxCH,YAAY,CAACwD,OAAO,CAAC;IACvB;EACF,CAAC;EAED,oBACEtE,OAAA;IAAKuE,KAAK,EAAEC,SAAU;IAAAC,QAAA,gBACpBzE,OAAA;MAAQuE,KAAK,EAAEG,MAAO;MAAAD,QAAA,gBACpBzE,OAAA;QAAK2E,GAAG,EAAC,gBAAgB;QAACC,GAAG,EAAC,MAAM;QAACL,KAAK,EAAEM;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzDjF,OAAA;QAAIuE,KAAK,EAAEW,UAAW;QAAAT,QAAA,EAAC;MAA4B;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxDjF,OAAA;QAAQmF,OAAO,EAAE9D,YAAa;QAACkD,KAAK,EAAEa,cAAe;QAAAX,QAAA,EAAC;MAAO;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC,eAETjF,OAAA;MAAMuE,KAAK,EAAEc,IAAK;MAAAZ,QAAA,gBAChBzE,OAAA;QAAAyE,QAAA,GAAI,WAAS,EAAC,CAAA7D,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEuB,KAAK,KAAI,SAAS;MAAA;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAElDzE,KAAK,iBACJR,OAAA;QAAKuE,KAAK,EAAE;UAAEe,eAAe,EAAE,SAAS;UAAEC,KAAK,EAAE,SAAS;UAAEC,OAAO,EAAE,MAAM;UAAEC,MAAM,EAAE,MAAM;UAAEC,YAAY,EAAE;QAAM,CAAE;QAAAjB,QAAA,EAChHjE;MAAK;QAAAsE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,EAEAvE,SAAS,iBACRV,OAAA;QAAKuE,KAAK,EAAE;UAAEe,eAAe,EAAE,SAAS;UAAEC,KAAK,EAAE,SAAS;UAAEC,OAAO,EAAE,MAAM;UAAEC,MAAM,EAAE,MAAM;UAAEC,YAAY,EAAE,KAAK;UAAEC,QAAQ,EAAE;QAAO,CAAE;QAAAlB,QAAA,gBACnIzE,OAAA;UAAAyE,QAAA,EAAQ;QAAW;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC5BjF,OAAA;UAAAyE,QAAA,EAAMpB,IAAI,CAACe,SAAS,CAAC1D,SAAS,EAAE,IAAI,EAAE,CAAC;QAAC;UAAAoE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CACN,eAEDjF,OAAA,CAACH,YAAY;QAACO,QAAQ,EAAEA,QAAS;QAACE,OAAO,EAAEA;MAAQ;QAAAwE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAGrDhE,UAAU,GAAG,CAAC,iBACbjB,OAAA;QAAKuE,KAAK,EAAE;UAAEqB,OAAO,EAAE,MAAM;UAAEC,cAAc,EAAE,QAAQ;UAAEC,SAAS,EAAE;QAAO,CAAE;QAAArB,QAAA,gBAC3EzE,OAAA;UACEmF,OAAO,EAAEA,CAAA,KAAMd,gBAAgB,CAACxD,SAAS,GAAG,CAAC,CAAE;UAC/CkF,QAAQ,EAAElF,SAAS,KAAK,CAAC,IAAIP,OAAQ;UACrCiE,KAAK,EAAE;YAAEkB,MAAM,EAAE,QAAQ;YAAED,OAAO,EAAE;UAAW,CAAE;UAAAf,QAAA,EAClD;QAED;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTjF,OAAA;UAAMuE,KAAK,EAAE;YAAEkB,MAAM,EAAE,QAAQ;YAAED,OAAO,EAAE;UAAW,CAAE;UAAAf,QAAA,GAAC,OACjD,EAAC5D,SAAS,GAAG,CAAC,EAAC,MAAI,EAACI,UAAU,EAAC,IAAE,EAACE,UAAU,EAAC,SACpD;QAAA;UAAA2D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACPjF,OAAA;UACEmF,OAAO,EAAEA,CAAA,KAAMd,gBAAgB,CAACxD,SAAS,GAAG,CAAC,CAAE;UAC/CkF,QAAQ,EAAElF,SAAS,KAAKI,UAAU,GAAG,CAAC,IAAIX,OAAQ;UAClDiE,KAAK,EAAE;YAAEkB,MAAM,EAAE,QAAQ;YAAED,OAAO,EAAE;UAAW,CAAE;UAAAf,QAAA,EAClD;QAED;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC/E,EAAA,CAzOID,gBAAgB;EAAA,QACHR,WAAW;AAAA;AAAAuG,EAAA,GADxB/F,gBAAgB;AA2OtB,MAAMuE,SAAS,GAAG;EAChByB,UAAU,EAAE;AACd,CAAC;AAED,MAAMvB,MAAM,GAAG;EACbwB,UAAU,EAAE,6CAA6C;EACzDX,KAAK,EAAE,OAAO;EACdC,OAAO,EAAE,WAAW;EACpBI,OAAO,EAAE,MAAM;EACfO,UAAU,EAAE,QAAQ;EACpBN,cAAc,EAAE,eAAe;EAC/BO,SAAS,EAAE;AACb,CAAC;AAED,MAAMvB,SAAS,GAAG;EAChBwB,MAAM,EAAE;AACV,CAAC;AAED,MAAMnB,UAAU,GAAG;EACjBoB,QAAQ,EAAE,CAAC;EACXC,SAAS,EAAE,QAAQ;EACnBZ,QAAQ,EAAE,MAAM;EAChBa,UAAU,EAAE,KAAK;EACjBf,MAAM,EAAE;AACV,CAAC;AAED,MAAML,cAAc,GAAG;EACrBqB,KAAK,EAAE,OAAO;EACdJ,MAAM,EAAE,MAAM;EACdf,eAAe,EAAE,aAAa;EAC9BC,KAAK,EAAE,OAAO;EACdmB,MAAM,EAAE,iBAAiB;EACzBhB,YAAY,EAAE,KAAK;EACnBC,QAAQ,EAAE,MAAM;EAChBa,UAAU,EAAE,MAAM;EAClBG,MAAM,EAAE;AACV,CAAC;AAED,MAAMtB,IAAI,GAAG;EACXG,OAAO,EAAE;AACX,CAAC;AAED,eAAevF,gBAAgB;AAAC,IAAA+F,EAAA;AAAAY,YAAA,CAAAZ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}