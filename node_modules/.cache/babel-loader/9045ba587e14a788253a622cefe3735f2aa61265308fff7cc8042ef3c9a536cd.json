{"ast":null,"code":"var _jsxFileName = \"/Users/yigit/Projects/GradReq/gms-main/src/pages/StudentDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { getApiUrl, getApiHeaders } from '../config/api';\nimport StudentTable from '../components/common/StudentTable';\nimport StudentForm from '../components/common/StudentForm';\nimport { getUserDetails } from '../utils/authUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentDashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [students, setStudents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [debugInfo, setDebugInfo] = useState(null);\n  const userDetails = getUserDetails();\n  // Kullanıcı bilgilerini localStorage'dan al\n  const [userData, setUserData] = useState(null);\n  useEffect(() => {\n    // localStorage'dan userData bilgisini al\n    const storedUserData = localStorage.getItem('userData');\n    if (storedUserData) {\n      try {\n        const parsedUserData = JSON.parse(storedUserData);\n        setUserData(parsedUserData);\n      } catch (err) {\n        console.error('Kullanıcı bilgisi çözümlenirken hata oluştu:', err);\n      }\n    }\n  }, []);\n\n  // Pagination state\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pageSize, setPageSize] = useState(10);\n  const [totalPages, setTotalPages] = useState(1);\n  const [totalCount, setTotalCount] = useState(0);\n\n  // Öğrenci ekleme ve düzenleme formu state'leri\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [departments, setDepartments] = useState([]);\n  const [faculties, setFaculties] = useState([]);\n  const [studentToEdit, setStudentToEdit] = useState(null);\n  const [isHovering, setIsHovering] = useState(false);\n  const handleLogout = () => {\n    // Kullanıcı doğrulaması yap\n    if (window.confirm('Oturumu kapatmak istediğinizden emin misiniz?')) {\n      // Tüm localStorage verilerini temizle\n      localStorage.removeItem('token');\n      localStorage.removeItem('tokenExpiration');\n      localStorage.removeItem('userRole');\n      localStorage.removeItem('userData');\n\n      // Axios Authorization header'ı temizle\n      delete axios.defaults.headers.common['Authorization'];\n\n      // Login sayfasına yönlendir\n      navigate('/');\n    }\n  };\n\n  // Fakülte ve bölüm verilerini getir\n  const fetchFacultiesAndDepartments = async () => {\n    try {\n      const token = localStorage.getItem('token');\n\n      // Fakülteleri getir - PageSize=100 parametresi eklendi\n      const facultiesResponse = await axios({\n        method: 'get',\n        url: getApiUrl('/api/Faculties?PageSize=100'),\n        headers: getApiHeaders(token),\n        timeout: 15000\n      });\n      console.log('Fakülteler API yanıtı:', facultiesResponse.data);\n\n      // Bölümleri getir - PageSize=100 parametresi eklendi\n      const departmentsResponse = await axios({\n        method: 'get',\n        url: getApiUrl('/api/Departments?PageSize=100'),\n        headers: getApiHeaders(token),\n        timeout: 15000\n      });\n      console.log('Bölümler API yanıtı:', departmentsResponse.data);\n\n      // Fakülte ve bölümlerin API yapısını kontrol et\n      let facultiesData = [];\n      if (facultiesResponse.data) {\n        if (Array.isArray(facultiesResponse.data)) {\n          facultiesData = facultiesResponse.data;\n        } else if (facultiesResponse.data.items && Array.isArray(facultiesResponse.data.items)) {\n          facultiesData = facultiesResponse.data.items;\n        } else if (typeof facultiesResponse.data === 'object') {\n          // Eğer beklenmeyen bir formatta geldiyse\n          console.warn('Fakülte verileri beklenmeyen formatta:', facultiesResponse.data);\n          facultiesData = Object.values(facultiesResponse.data).filter(item => typeof item === 'object');\n        }\n      }\n      let departmentsData = [];\n      if (departmentsResponse.data) {\n        if (Array.isArray(departmentsResponse.data)) {\n          departmentsData = departmentsResponse.data;\n        } else if (departmentsResponse.data.items && Array.isArray(departmentsResponse.data.items)) {\n          departmentsData = departmentsResponse.data.items;\n        } else if (typeof departmentsResponse.data === 'object') {\n          // Eğer beklenmeyen bir formatta geldiyse\n          console.warn('Bölüm verileri beklenmeyen formatta:', departmentsResponse.data);\n          departmentsData = Object.values(departmentsResponse.data).filter(item => typeof item === 'object');\n        }\n      }\n\n      // Debug için detaylı veri içeriği\n      console.log('İşlenmiş Fakülte verileri:', facultiesData);\n      console.log('İşlenmiş Bölüm verileri:', departmentsData);\n\n      // Veri yapılarını standartlaştır\n      facultiesData = facultiesData.map(faculty => ({\n        id: faculty.id,\n        name: faculty.name || faculty.facultyName || ''\n      }));\n      departmentsData = departmentsData.map(dept => ({\n        id: dept.id,\n        name: dept.name || dept.departmentName || '',\n        facultyId: dept.facultyId\n      }));\n\n      // Fakülte ve bölüm adlarını konsola yazdir\n      console.log('=== FAKÜLTELER ===');\n      facultiesData.forEach((faculty, index) => {\n        console.log(`${index + 1}. ${faculty.name} (ID: ${faculty.id})`);\n      });\n      console.log('=== BÖLÜMLER ===');\n      departmentsData.forEach((dept, index) => {\n        const parentFaculty = facultiesData.find(f => f.id === dept.facultyId);\n        console.log(`${index + 1}. ${dept.name} (ID: ${dept.id}) - Fakülte: ${(parentFaculty === null || parentFaculty === void 0 ? void 0 : parentFaculty.name) || 'Bilinmiyor'}`);\n      });\n\n      // ID'lerin tiplerini kontrol et\n      facultiesData.forEach(f => {\n        console.log(`Fakülte: ${f.name}, ID: ${f.id}, ID tipi: ${typeof f.id}`);\n      });\n      departmentsData.forEach(d => {\n        console.log(`Bölüm: ${d.name}, ID: ${d.id}, facultyId: ${d.facultyId}, facultyId tipi: ${typeof d.facultyId}`);\n      });\n      setFaculties(facultiesData);\n      setDepartments(departmentsData);\n    } catch (err) {\n      console.error('Fakülte ve bölüm verileri getirme hatası:', err);\n      if (err.response) {\n        console.error('API hata detayları:', err.response.status, err.response.data);\n      }\n    }\n  };\n\n  // Öğrenci verilerini doğru yapıya dönüştüren yardımcı fonksiyon\n  const processStudentData = students => {\n    return students.map(student => {\n      // Öğrenci için isim oluştur\n      let displayName = 'Student';\n      if (student.firstName && student.lastName) {\n        displayName = `${student.firstName} ${student.lastName}`;\n      } else if (student.name) {\n        displayName = student.name;\n      } else if (student.userName) {\n        displayName = student.userName;\n      } else if (student.displayName) {\n        displayName = student.displayName;\n      } else if (student.studentNumber) {\n        displayName = `Student ${student.studentNumber}`;\n      } else if (student.studentId) {\n        displayName = `Student ${student.studentId}`;\n      } else if (student.id) {\n        displayName = `Student ${student.id}`;\n      }\n\n      // E-posta oluştur\n      const email = student.email || `${student.studentNumber || student.studentId || 'student'}@university.edu`;\n      return {\n        ...student,\n        email,\n        displayName\n      };\n    });\n  };\n\n  // Fetch students from API\n  const fetchStudents = async () => {\n    try {\n      setLoading(true);\n\n      // Get the token from localStorage\n      const token = localStorage.getItem('token');\n\n      // API URL'ini consola yazdır\n      const apiUrl = getApiUrl(`/api/Students?PageIndex=${pageIndex}&PageSize=${pageSize}`);\n      console.log('API URL:', apiUrl);\n      console.log('Token:', token ? 'Mevcut' : 'Yok');\n\n      // API çağrısı - yeni headers yapılandırmasını kullan\n      const response = await axios({\n        method: 'get',\n        url: apiUrl,\n        headers: getApiHeaders(token),\n        responseType: 'json',\n        timeout: 15000 // 15 saniye timeout\n      });\n      console.log('API Response Status:', response.status);\n      console.log('API Response Type:', typeof response.data);\n\n      // HTML yanıtı kontrolü\n      if (typeof response.data === 'string' && response.data.includes('<!DOCTYPE html>')) {\n        console.log('HTML yanıtı alındı, bu bir Ngrok uyarısı olabilir');\n        setError('API HTML yanıtı döndü. Ngrok uyarısı atlatılamadı.');\n        setStudents([]);\n        setLoading(false);\n        return;\n      }\n\n      // Kısa bir veri önizlemesi göster (çok büyük değilse)\n      if (typeof response.data === 'string' && response.data.length < 1000) {\n        console.log('API Raw Response:', response.data);\n      } else if (typeof response.data === 'object') {\n        console.log('API Response Object:', typeof response.data === 'object' ? 'Object received' : 'Not an object');\n      }\n      let processedData = response.data;\n\n      // Yanıt bir string ise JSON olarak ayrıştırmayı dene\n      if (typeof response.data === 'string') {\n        try {\n          console.log('Response is string, trying to parse as JSON');\n          processedData = JSON.parse(response.data);\n          console.log('Parsed data:', processedData ? 'Available' : 'Empty');\n        } catch (parseError) {\n          console.error('Failed to parse response as JSON:', parseError);\n          setError('API JSON parsing error: ' + parseError.message);\n          setStudents([]);\n          setLoading(false);\n          return;\n        }\n      }\n\n      // Handle different response formats\n      if (processedData) {\n        if (Array.isArray(processedData)) {\n          // Direct array response\n          console.log('Response contains direct array with', processedData.length, 'items');\n          const resultData = processStudentData(processedData);\n          setStudents(resultData);\n          setTotalCount(processedData.length);\n          setTotalPages(Math.ceil(processedData.length / pageSize));\n          setError(null);\n        } else if (processedData.items && Array.isArray(processedData.items)) {\n          // Paginated response with items array\n          console.log('Response contains paginated items array with', processedData.items.length, 'items');\n          const resultData = processStudentData(processedData.items);\n          setStudents(resultData);\n          setTotalPages(processedData.pages || 1);\n          setTotalCount(processedData.count || 0);\n          setError(null);\n        } else if (Array.isArray(processedData.data)) {\n          // Alternatif API yanıtı formatı\n          console.log('Response contains data array with', processedData.data.length, 'items');\n          const resultData = processStudentData(processedData.data);\n          setStudents(resultData);\n          setTotalCount(processedData.data.length);\n          setTotalPages(Math.ceil(processedData.data.length / pageSize));\n          setError(null);\n        } else {\n          console.error('Unexpected API response format:', typeof processedData);\n          setStudents([]);\n          setTotalCount(0);\n          setTotalPages(1);\n          setError('Unexpected data format received from server');\n        }\n      } else {\n        console.log('No data in response');\n        setStudents([]);\n        setTotalCount(0);\n        setTotalPages(1);\n        setError('No data received from server');\n      }\n    } catch (err) {\n      console.error('Failed to fetch students:', err);\n      console.error('Error details:', err.message);\n      if (err.response) {\n        console.error('Error response:', err.response.status, err.response.data);\n        setDebugInfo({\n          errorStatus: err.response.status,\n          errorData: JSON.stringify(err.response.data)\n        });\n      }\n      setStudents([]);\n      setTotalCount(0);\n      setTotalPages(1);\n      setError(`Failed to load students: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch students when component mounts or pagination changes\n  useEffect(() => {\n    fetchStudents();\n  }, [pageIndex, pageSize]); // Re-fetch when pagination changes\n\n  // Fakülte ve bölüm verilerini sayfa yüklendiğinde bir kez getir\n  useEffect(() => {\n    fetchFacultiesAndDepartments();\n  }, []);\n\n  // Handle pagination change\n  const handlePageChange = newPage => {\n    if (newPage >= 0 && newPage < totalPages) {\n      setPageIndex(newPage);\n    }\n  };\n\n  // Öğrenci düzenleme işlemini başlat\n  const handleEditStudent = student => {\n    setStudentToEdit(student);\n    setShowAddForm(true);\n    // Sayfayı form kısmına scroll yap\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n\n  // Form kapatıldığında\n  const handleFormClose = () => {\n    setShowAddForm(false);\n    setStudentToEdit(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: container,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      style: header,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/iyte-logo.png\",\n        alt: \"Logo\",\n        style: logoStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: titleStyle,\n        children: \"\\xD6\\u011Frenci Y\\xF6netim Sistemi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        style: isHovering ? hoverLogoutBtnStyle : logoutBtnStyle,\n        onMouseEnter: () => setIsHovering(true),\n        onMouseLeave: () => setIsHovering(false),\n        children: \"\\xC7\\u0131k\\u0131\\u015F Yap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      style: main,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Ho\\u015Fgeldin, \", userData ? `${userData.firstName} ${userData.lastName}` : (userDetails === null || userDetails === void 0 ? void 0 : userDetails.email) || 'Öğrenci']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), userData && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: userInfoStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\xD6\\u011Frenci Bilgileri\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: userInfoContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: userInfoItem,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 17\n            }, this), \" \", userData.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: userInfoItem,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Ad:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this), \" \", userData.firstName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: userInfoItem,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Soyad:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this), \" \", userData.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: userInfoItem,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"E-posta:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 17\n            }, this), \" \", userData.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: userInfoItem,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Durum:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 17\n            }, this), \" \", userData.status ? 'Aktif' : 'Beklemede']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: addButtonContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setStudentToEdit(null); // Yeni öğrenci moduna geç\n            setShowAddForm(!showAddForm);\n          },\n          style: addButtonStyle,\n          children: showAddForm ? 'Formu Kapat ↑' : '+ Yeni Öğrenci Ekle'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this), showAddForm && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFormClose,\n          style: closeButtonStyle,\n          children: \"\\u0130ptal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#f8d7da',\n          color: '#721c24',\n          padding: '10px',\n          margin: '10px',\n          borderRadius: '4px'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 11\n      }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#e2f3ff',\n          color: '#0c5460',\n          padding: '10px',\n          margin: '10px',\n          borderRadius: '4px',\n          fontSize: '12px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Debug Info:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(debugInfo, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 11\n      }, this), showAddForm && /*#__PURE__*/_jsxDEV(StudentForm, {\n        onStudentAdded: () => {\n          fetchStudents();\n          // Başarılı kaydetme sonrası formu kapat (isteğe bağlı)\n          // setShowAddForm(false);\n          // setStudentToEdit(null);\n        },\n        faculties: faculties,\n        departments: departments,\n        studentToEdit: studentToEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StudentTable, {\n        students: students,\n        loading: loading,\n        onEdit: handleEditStudent,\n        onRefresh: fetchStudents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange(pageIndex - 1),\n          disabled: pageIndex === 0 || loading,\n          style: {\n            margin: '0 10px',\n            padding: '5px 10px'\n          },\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            margin: '0 10px',\n            padding: '5px 10px'\n          },\n          children: [\"Page \", pageIndex + 1, \" of \", totalPages, \" (\", totalCount, \" items)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange(pageIndex + 1),\n          disabled: pageIndex === totalPages - 1 || loading,\n          style: {\n            margin: '0 10px',\n            padding: '5px 10px'\n          },\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 349,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentDashboard, \"ipnL9baS3w8+SD1Z+e03Er8VmxY=\", false, function () {\n  return [useNavigate];\n});\n_c = StudentDashboard;\nconst container = {\n  fontFamily: 'Arial, sans-serif'\n};\nconst header = {\n  background: 'linear-gradient(to right, #7b1fa2, #a0181b)',\n  color: 'white',\n  padding: '10px 30px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  boxShadow: '0 2px 10px rgba(0,0,0,0.1)'\n};\nconst logoStyle = {\n  height: '40px'\n};\nconst titleStyle = {\n  flexGrow: 1,\n  textAlign: 'center',\n  fontSize: '20px',\n  fontWeight: '600',\n  margin: 0\n};\nconst logoutBtnStyle = {\n  padding: '8px 16px',\n  backgroundColor: 'rgba(255, 255, 255, 0.15)',\n  color: 'white',\n  border: '1px solid white',\n  borderRadius: '6px',\n  cursor: 'pointer',\n  fontWeight: 'bold',\n  fontSize: '12px',\n  transition: 'all 0.3s ease',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  boxShadow: '0 2px 5px rgba(0,0,0,0.2)',\n  width: '80px',\n  height: '30px'\n};\n\n// Çıkış butonuna hover efekti\nconst hoverLogoutBtnStyle = {\n  ...logoutBtnStyle,\n  backgroundColor: 'rgba(255, 255, 255, 0.3)'\n};\nconst main = {\n  padding: '2rem'\n};\n\n// Yeni öğrenci ekleme butonu container stili\nconst addButtonContainer = {\n  display: 'flex',\n  justifyContent: 'center',\n  margin: '20px 0',\n  padding: '10px',\n  backgroundColor: '#f0f0f0',\n  borderRadius: '8px',\n  gap: '10px'\n};\n\n// Yeni öğrenci ekleme butonu stili\nconst addButtonStyle = {\n  padding: '15px 30px',\n  fontSize: '16px',\n  fontWeight: 'bold',\n  backgroundColor: '#9C27B0',\n  color: 'white',\n  border: 'none',\n  borderRadius: '8px',\n  cursor: 'pointer',\n  boxShadow: '0 4px 8px rgba(0,0,0,0.2)',\n  transition: 'all 0.3s ease'\n};\n\n// İptal butonu stili\nconst closeButtonStyle = {\n  padding: '15px 30px',\n  fontSize: '16px',\n  fontWeight: 'bold',\n  backgroundColor: '#f44336',\n  color: 'white',\n  border: 'none',\n  borderRadius: '8px',\n  cursor: 'pointer',\n  boxShadow: '0 4px 8px rgba(0,0,0,0.2)',\n  transition: 'all 0.3s ease'\n};\nconst userInfoStyle = {\n  marginBottom: '20px'\n};\nconst userInfoContainer = {\n  display: 'flex',\n  flexWrap: 'wrap'\n};\nconst userInfoItem = {\n  width: '50%',\n  marginBottom: '10px'\n};\nexport default StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","getApiUrl","getApiHeaders","StudentTable","StudentForm","getUserDetails","jsxDEV","_jsxDEV","StudentDashboard","_s","navigate","students","setStudents","loading","setLoading","error","setError","debugInfo","setDebugInfo","userDetails","userData","setUserData","storedUserData","localStorage","getItem","parsedUserData","JSON","parse","err","console","pageIndex","setPageIndex","pageSize","setPageSize","totalPages","setTotalPages","totalCount","setTotalCount","showAddForm","setShowAddForm","departments","setDepartments","faculties","setFaculties","studentToEdit","setStudentToEdit","isHovering","setIsHovering","handleLogout","window","confirm","removeItem","defaults","headers","common","fetchFacultiesAndDepartments","token","facultiesResponse","method","url","timeout","log","data","departmentsResponse","facultiesData","Array","isArray","items","warn","Object","values","filter","item","departmentsData","map","faculty","id","name","facultyName","dept","departmentName","facultyId","forEach","index","parentFaculty","find","f","d","response","status","processStudentData","student","displayName","firstName","lastName","userName","studentNumber","studentId","email","fetchStudents","apiUrl","responseType","includes","length","processedData","parseError","message","resultData","Math","ceil","pages","count","errorStatus","errorData","stringify","handlePageChange","newPage","handleEditStudent","scrollTo","top","behavior","handleFormClose","style","container","children","header","src","alt","logoStyle","fileName","_jsxFileName","lineNumber","columnNumber","titleStyle","onClick","hoverLogoutBtnStyle","logoutBtnStyle","onMouseEnter","onMouseLeave","main","userInfoStyle","userInfoContainer","userInfoItem","addButtonContainer","addButtonStyle","closeButtonStyle","backgroundColor","color","padding","margin","borderRadius","fontSize","onStudentAdded","onEdit","onRefresh","display","justifyContent","marginTop","disabled","_c","fontFamily","background","alignItems","boxShadow","height","flexGrow","textAlign","fontWeight","border","cursor","transition","width","gap","marginBottom","flexWrap","$RefreshReg$"],"sources":["/Users/yigit/Projects/GradReq/gms-main/src/pages/StudentDashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { getApiUrl, getApiHeaders } from '../config/api';\nimport StudentTable from '../components/common/StudentTable';\nimport StudentForm from '../components/common/StudentForm';\nimport { getUserDetails } from '../utils/authUtils';\n\nconst StudentDashboard = () => {\n  const navigate = useNavigate();\n  const [students, setStudents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [debugInfo, setDebugInfo] = useState(null);\n  const userDetails = getUserDetails();\n  // Kullanıcı bilgilerini localStorage'dan al\n  const [userData, setUserData] = useState(null);\n  \n  useEffect(() => {\n    // localStorage'dan userData bilgisini al\n    const storedUserData = localStorage.getItem('userData');\n    if (storedUserData) {\n      try {\n        const parsedUserData = JSON.parse(storedUserData);\n        setUserData(parsedUserData);\n      } catch (err) {\n        console.error('Kullanıcı bilgisi çözümlenirken hata oluştu:', err);\n      }\n    }\n  }, []);\n  \n  // Pagination state\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pageSize, setPageSize] = useState(10);\n  const [totalPages, setTotalPages] = useState(1);\n  const [totalCount, setTotalCount] = useState(0);\n\n  // Öğrenci ekleme ve düzenleme formu state'leri\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [departments, setDepartments] = useState([]);\n  const [faculties, setFaculties] = useState([]);\n  const [studentToEdit, setStudentToEdit] = useState(null);\n\n  const [isHovering, setIsHovering] = useState(false);\n\n  const handleLogout = () => {\n    // Kullanıcı doğrulaması yap\n    if (window.confirm('Oturumu kapatmak istediğinizden emin misiniz?')) {\n      // Tüm localStorage verilerini temizle\n      localStorage.removeItem('token');\n      localStorage.removeItem('tokenExpiration');\n      localStorage.removeItem('userRole');\n      localStorage.removeItem('userData');\n      \n      // Axios Authorization header'ı temizle\n      delete axios.defaults.headers.common['Authorization'];\n      \n      // Login sayfasına yönlendir\n      navigate('/');\n    }\n  };\n\n  // Fakülte ve bölüm verilerini getir\n  const fetchFacultiesAndDepartments = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      \n      // Fakülteleri getir - PageSize=100 parametresi eklendi\n      const facultiesResponse = await axios({\n        method: 'get',\n        url: getApiUrl('/api/Faculties?PageSize=100'),\n        headers: getApiHeaders(token),\n        timeout: 15000\n      });\n      \n      console.log('Fakülteler API yanıtı:', facultiesResponse.data);\n      \n      // Bölümleri getir - PageSize=100 parametresi eklendi\n      const departmentsResponse = await axios({\n        method: 'get',\n        url: getApiUrl('/api/Departments?PageSize=100'),\n        headers: getApiHeaders(token),\n        timeout: 15000\n      });\n      \n      console.log('Bölümler API yanıtı:', departmentsResponse.data);\n      \n      // Fakülte ve bölümlerin API yapısını kontrol et\n      let facultiesData = [];\n      if (facultiesResponse.data) {\n        if (Array.isArray(facultiesResponse.data)) {\n          facultiesData = facultiesResponse.data;\n        } else if (facultiesResponse.data.items && Array.isArray(facultiesResponse.data.items)) {\n          facultiesData = facultiesResponse.data.items;\n        } else if (typeof facultiesResponse.data === 'object') {\n          // Eğer beklenmeyen bir formatta geldiyse\n          console.warn('Fakülte verileri beklenmeyen formatta:', facultiesResponse.data);\n          facultiesData = Object.values(facultiesResponse.data).filter(item => typeof item === 'object');\n        }\n      }\n      \n      let departmentsData = [];\n      if (departmentsResponse.data) {\n        if (Array.isArray(departmentsResponse.data)) {\n          departmentsData = departmentsResponse.data;\n        } else if (departmentsResponse.data.items && Array.isArray(departmentsResponse.data.items)) {\n          departmentsData = departmentsResponse.data.items;\n        } else if (typeof departmentsResponse.data === 'object') {\n          // Eğer beklenmeyen bir formatta geldiyse\n          console.warn('Bölüm verileri beklenmeyen formatta:', departmentsResponse.data);\n          departmentsData = Object.values(departmentsResponse.data).filter(item => typeof item === 'object');\n        }\n      }\n      \n      // Debug için detaylı veri içeriği\n      console.log('İşlenmiş Fakülte verileri:', facultiesData);\n      console.log('İşlenmiş Bölüm verileri:', departmentsData);\n      \n      // Veri yapılarını standartlaştır\n      facultiesData = facultiesData.map(faculty => ({\n        id: faculty.id,\n        name: faculty.name || faculty.facultyName || ''\n      }));\n      \n      departmentsData = departmentsData.map(dept => ({\n        id: dept.id,\n        name: dept.name || dept.departmentName || '',\n        facultyId: dept.facultyId\n      }));\n      \n      // Fakülte ve bölüm adlarını konsola yazdir\n      console.log('=== FAKÜLTELER ===');\n      facultiesData.forEach((faculty, index) => {\n        console.log(`${index + 1}. ${faculty.name} (ID: ${faculty.id})`);\n      });\n      \n      console.log('=== BÖLÜMLER ===');\n      departmentsData.forEach((dept, index) => {\n        const parentFaculty = facultiesData.find(f => f.id === dept.facultyId);\n        console.log(`${index + 1}. ${dept.name} (ID: ${dept.id}) - Fakülte: ${parentFaculty?.name || 'Bilinmiyor'}`);\n      });\n      \n      // ID'lerin tiplerini kontrol et\n      facultiesData.forEach(f => {\n        console.log(`Fakülte: ${f.name}, ID: ${f.id}, ID tipi: ${typeof f.id}`);\n      });\n      \n      departmentsData.forEach(d => {\n        console.log(`Bölüm: ${d.name}, ID: ${d.id}, facultyId: ${d.facultyId}, facultyId tipi: ${typeof d.facultyId}`);\n      });\n      \n      setFaculties(facultiesData);\n      setDepartments(departmentsData);\n      \n    } catch (err) {\n      console.error('Fakülte ve bölüm verileri getirme hatası:', err);\n      if (err.response) {\n        console.error('API hata detayları:', err.response.status, err.response.data);\n      }\n    }\n  };\n\n  // Öğrenci verilerini doğru yapıya dönüştüren yardımcı fonksiyon\n  const processStudentData = (students) => {\n    return students.map(student => {\n      // Öğrenci için isim oluştur\n      let displayName = 'Student';\n      if (student.firstName && student.lastName) {\n        displayName = `${student.firstName} ${student.lastName}`;\n      } else if (student.name) {\n        displayName = student.name;\n      } else if (student.userName) {\n        displayName = student.userName;\n      } else if (student.displayName) {\n        displayName = student.displayName;\n      } else if (student.studentNumber) {\n        displayName = `Student ${student.studentNumber}`;\n      } else if (student.studentId) {\n        displayName = `Student ${student.studentId}`;\n      } else if (student.id) {\n        displayName = `Student ${student.id}`;\n      }\n      \n      // E-posta oluştur\n      const email = student.email || \n        `${student.studentNumber || student.studentId || 'student'}@university.edu`;\n      \n      return {\n        ...student,\n        email,\n        displayName\n      };\n    });\n  };\n\n  // Fetch students from API\n  const fetchStudents = async () => {\n    try {\n      setLoading(true);\n      \n      // Get the token from localStorage\n      const token = localStorage.getItem('token');\n      \n      // API URL'ini consola yazdır\n      const apiUrl = getApiUrl(`/api/Students?PageIndex=${pageIndex}&PageSize=${pageSize}`);\n      console.log('API URL:', apiUrl);\n      console.log('Token:', token ? 'Mevcut' : 'Yok');\n      \n      // API çağrısı - yeni headers yapılandırmasını kullan\n      const response = await axios({\n        method: 'get',\n        url: apiUrl,\n        headers: getApiHeaders(token),\n        responseType: 'json',\n        timeout: 15000 // 15 saniye timeout\n      });\n      \n      console.log('API Response Status:', response.status);\n      console.log('API Response Type:', typeof response.data);\n      \n      // HTML yanıtı kontrolü\n      if (typeof response.data === 'string' && response.data.includes('<!DOCTYPE html>')) {\n        console.log('HTML yanıtı alındı, bu bir Ngrok uyarısı olabilir');\n        setError('API HTML yanıtı döndü. Ngrok uyarısı atlatılamadı.');\n        setStudents([]);\n        setLoading(false);\n        return;\n      }\n      \n      // Kısa bir veri önizlemesi göster (çok büyük değilse)\n      if (typeof response.data === 'string' && response.data.length < 1000) {\n        console.log('API Raw Response:', response.data);\n      } else if (typeof response.data === 'object') {\n        console.log('API Response Object:', typeof response.data === 'object' ? 'Object received' : 'Not an object');\n      }\n      \n      let processedData = response.data;\n      \n      // Yanıt bir string ise JSON olarak ayrıştırmayı dene\n      if (typeof response.data === 'string') {\n        try {\n          console.log('Response is string, trying to parse as JSON');\n          processedData = JSON.parse(response.data);\n          console.log('Parsed data:', processedData ? 'Available' : 'Empty');\n        } catch (parseError) {\n          console.error('Failed to parse response as JSON:', parseError);\n          setError('API JSON parsing error: ' + parseError.message);\n          setStudents([]);\n          setLoading(false);\n          return;\n        }\n      }\n      \n      // Handle different response formats\n      if (processedData) {\n        if (Array.isArray(processedData)) {\n          // Direct array response\n          console.log('Response contains direct array with', processedData.length, 'items');\n          const resultData = processStudentData(processedData);\n          setStudents(resultData);\n          setTotalCount(processedData.length);\n          setTotalPages(Math.ceil(processedData.length / pageSize));\n          setError(null);\n        } else if (processedData.items && Array.isArray(processedData.items)) {\n          // Paginated response with items array\n          console.log('Response contains paginated items array with', processedData.items.length, 'items');\n          const resultData = processStudentData(processedData.items);\n          setStudents(resultData);\n          setTotalPages(processedData.pages || 1);\n          setTotalCount(processedData.count || 0);\n          setError(null);\n        } else if (Array.isArray(processedData.data)) {\n          // Alternatif API yanıtı formatı\n          console.log('Response contains data array with', processedData.data.length, 'items');\n          const resultData = processStudentData(processedData.data);\n          setStudents(resultData);\n          setTotalCount(processedData.data.length);\n          setTotalPages(Math.ceil(processedData.data.length / pageSize));\n          setError(null);\n        } else {\n          console.error('Unexpected API response format:', typeof processedData);\n          setStudents([]);\n          setTotalCount(0);\n          setTotalPages(1);\n          setError('Unexpected data format received from server');\n        }\n      } else {\n        console.log('No data in response');\n        setStudents([]);\n        setTotalCount(0);\n        setTotalPages(1);\n        setError('No data received from server');\n      }\n    } catch (err) {\n      console.error('Failed to fetch students:', err);\n      console.error('Error details:', err.message);\n      if (err.response) {\n        console.error('Error response:', err.response.status, err.response.data);\n        setDebugInfo({\n          errorStatus: err.response.status,\n          errorData: JSON.stringify(err.response.data)\n        });\n      }\n      \n      setStudents([]);\n      setTotalCount(0);\n      setTotalPages(1);\n      setError(`Failed to load students: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch students when component mounts or pagination changes\n  useEffect(() => {\n    fetchStudents();\n  }, [pageIndex, pageSize]); // Re-fetch when pagination changes\n\n  // Fakülte ve bölüm verilerini sayfa yüklendiğinde bir kez getir\n  useEffect(() => {\n    fetchFacultiesAndDepartments();\n  }, []);\n\n  // Handle pagination change\n  const handlePageChange = (newPage) => {\n    if (newPage >= 0 && newPage < totalPages) {\n      setPageIndex(newPage);\n    }\n  };\n\n  // Öğrenci düzenleme işlemini başlat\n  const handleEditStudent = (student) => {\n    setStudentToEdit(student);\n    setShowAddForm(true);\n    // Sayfayı form kısmına scroll yap\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n\n  // Form kapatıldığında\n  const handleFormClose = () => {\n    setShowAddForm(false);\n    setStudentToEdit(null);\n  };\n\n  return (\n    <div style={container}>\n      <header style={header}>\n        <img src=\"/iyte-logo.png\" alt=\"Logo\" style={logoStyle} />\n        <h1 style={titleStyle}>Öğrenci Yönetim Sistemi</h1>\n        <button \n          onClick={handleLogout} \n          style={isHovering ? hoverLogoutBtnStyle : logoutBtnStyle}\n          onMouseEnter={() => setIsHovering(true)}\n          onMouseLeave={() => setIsHovering(false)}\n        >\n          Çıkış Yap\n        </button>\n      </header>\n\n      <main style={main}>\n        <h2>Hoşgeldin, {userData ? `${userData.firstName} ${userData.lastName}` : (userDetails?.email || 'Öğrenci')}</h2>\n        \n        {userData && (\n          <div style={userInfoStyle}>\n            <h3>Öğrenci Bilgileri</h3>\n            <div style={userInfoContainer}>\n              <div style={userInfoItem}>\n                <strong>ID:</strong> {userData.id}\n              </div>\n              <div style={userInfoItem}>\n                <strong>Ad:</strong> {userData.firstName}\n              </div>\n              <div style={userInfoItem}>\n                <strong>Soyad:</strong> {userData.lastName}\n              </div>\n              <div style={userInfoItem}>\n                <strong>E-posta:</strong> {userData.email}\n              </div>\n              <div style={userInfoItem}>\n                <strong>Durum:</strong> {userData.status ? 'Aktif' : 'Beklemede'}\n              </div>\n            </div>\n          </div>\n        )}\n        \n        {/* Öğrenci Ekle Butonu */}\n        <div style={addButtonContainer}>\n          <button \n            onClick={() => {\n              setStudentToEdit(null); // Yeni öğrenci moduna geç\n              setShowAddForm(!showAddForm);\n            }}\n            style={addButtonStyle}\n          >\n            {showAddForm ? 'Formu Kapat ↑' : '+ Yeni Öğrenci Ekle'}\n          </button>\n          \n          {showAddForm && (\n            <button \n              onClick={handleFormClose}\n              style={closeButtonStyle}\n            >\n              İptal\n            </button>\n          )}\n        </div>\n        \n        {error && (\n          <div style={{ backgroundColor: '#f8d7da', color: '#721c24', padding: '10px', margin: '10px', borderRadius: '4px' }}>\n            {error}\n          </div>\n        )}\n        \n        {debugInfo && (\n          <div style={{ backgroundColor: '#e2f3ff', color: '#0c5460', padding: '10px', margin: '10px', borderRadius: '4px', fontSize: '12px' }}>\n            <strong>Debug Info:</strong>\n            <pre>{JSON.stringify(debugInfo, null, 2)}</pre>\n          </div>\n        )}\n        \n        {/* Öğrenci Ekleme/Düzenleme Formu */}\n        {showAddForm && (\n          <StudentForm \n            onStudentAdded={() => {\n              fetchStudents();\n              // Başarılı kaydetme sonrası formu kapat (isteğe bağlı)\n              // setShowAddForm(false);\n              // setStudentToEdit(null);\n            }} \n            faculties={faculties} \n            departments={departments}\n            studentToEdit={studentToEdit}\n          />\n        )}\n        \n        {/* Öğrenci Tablosu */}\n        <StudentTable \n          students={students} \n          loading={loading}\n          onEdit={handleEditStudent}\n          onRefresh={fetchStudents}\n        />\n        \n        {/* Pagination controls */}\n        {totalPages > 1 && (\n          <div style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}>\n            <button \n              onClick={() => handlePageChange(pageIndex - 1)} \n              disabled={pageIndex === 0 || loading}\n              style={{ margin: '0 10px', padding: '5px 10px' }}\n            >\n              Previous\n            </button>\n            <span style={{ margin: '0 10px', padding: '5px 10px' }}>\n              Page {pageIndex + 1} of {totalPages} ({totalCount} items)\n            </span>\n            <button \n              onClick={() => handlePageChange(pageIndex + 1)} \n              disabled={pageIndex === totalPages - 1 || loading}\n              style={{ margin: '0 10px', padding: '5px 10px' }}\n            >\n              Next\n            </button>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nconst container = {\n  fontFamily: 'Arial, sans-serif',\n};\n\nconst header = {\n  background: 'linear-gradient(to right, #7b1fa2, #a0181b)',\n  color: 'white',\n  padding: '10px 30px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  boxShadow: '0 2px 10px rgba(0,0,0,0.1)',\n};\n\nconst logoStyle = {\n  height: '40px',\n};\n\nconst titleStyle = {\n  flexGrow: 1,\n  textAlign: 'center',\n  fontSize: '20px',\n  fontWeight: '600',\n  margin: 0,\n};\n\nconst logoutBtnStyle = {\n  padding: '8px 16px',\n  backgroundColor: 'rgba(255, 255, 255, 0.15)',\n  color: 'white',\n  border: '1px solid white',\n  borderRadius: '6px',\n  cursor: 'pointer',\n  fontWeight: 'bold',\n  fontSize: '12px',\n  transition: 'all 0.3s ease',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  boxShadow: '0 2px 5px rgba(0,0,0,0.2)',\n  width: '80px',\n  height: '30px',\n};\n\n// Çıkış butonuna hover efekti\nconst hoverLogoutBtnStyle = {\n  ...logoutBtnStyle,\n  backgroundColor: 'rgba(255, 255, 255, 0.3)',\n};\n\nconst main = {\n  padding: '2rem',\n};\n\n// Yeni öğrenci ekleme butonu container stili\nconst addButtonContainer = {\n  display: 'flex',\n  justifyContent: 'center',\n  margin: '20px 0',\n  padding: '10px',\n  backgroundColor: '#f0f0f0',\n  borderRadius: '8px',\n  gap: '10px'\n};\n\n// Yeni öğrenci ekleme butonu stili\nconst addButtonStyle = {\n  padding: '15px 30px',\n  fontSize: '16px',\n  fontWeight: 'bold',\n  backgroundColor: '#9C27B0',\n  color: 'white',\n  border: 'none',\n  borderRadius: '8px',\n  cursor: 'pointer',\n  boxShadow: '0 4px 8px rgba(0,0,0,0.2)',\n  transition: 'all 0.3s ease',\n};\n\n// İptal butonu stili\nconst closeButtonStyle = {\n  padding: '15px 30px',\n  fontSize: '16px',\n  fontWeight: 'bold',\n  backgroundColor: '#f44336',\n  color: 'white',\n  border: 'none',\n  borderRadius: '8px',\n  cursor: 'pointer',\n  boxShadow: '0 4px 8px rgba(0,0,0,0.2)',\n  transition: 'all 0.3s ease',\n};\n\nconst userInfoStyle = {\n  marginBottom: '20px',\n};\n\nconst userInfoContainer = {\n  display: 'flex',\n  flexWrap: 'wrap',\n};\n\nconst userInfoItem = {\n  width: '50%',\n  marginBottom: '10px',\n};\n\nexport default StudentDashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}