{"ast":null,"code":"// Backend API Configuration\n\n// Base URL for all API calls\nexport const API_BASE_URL = 'https://7514-188-58-11-220.ngrok-free.app ';\n\n// API istekleri için ortak headers\nexport const getApiHeaders = token => {\n  return {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n    'ngrok-skip-browser-warning': 'true',\n    'Authorization': token ? `Bearer ${token}` : ''\n  };\n};\n\n// Token yenileme kontrol fonksiyonu - gerekirse\nexport const isTokenExpired = () => {\n  try {\n    const expirationDate = localStorage.getItem('tokenExpiration');\n    if (!expirationDate) return true;\n    return new Date(expirationDate) < new Date();\n  } catch (error) {\n    console.error('Token expiration check error:', error);\n    return true; // Hata durumunda, token'ı geçersiz kabul et\n  }\n};\n\n// Function to get full API URL\nexport const getApiUrl = endpoint => {\n  // Ngrok güvenlik kontrolünü bypass etmek için \"skip_browser_warning=1\" parametresi ekle\n  const separator = endpoint.includes('?') ? '&' : '?';\n  const endpointWithParam = `${endpoint}${separator}skip_browser_warning=1`;\n  return `${API_BASE_URL}${endpointWithParam.startsWith('/') ? endpointWithParam : '/' + endpointWithParam}`;\n};","map":{"version":3,"names":["API_BASE_URL","getApiHeaders","token","isTokenExpired","expirationDate","localStorage","getItem","Date","error","console","getApiUrl","endpoint","separator","includes","endpointWithParam","startsWith"],"sources":["/Users/yigit/Projects/GradReq/gms-main/src/config/api.js"],"sourcesContent":["// Backend API Configuration\n\n// Base URL for all API calls\nexport const API_BASE_URL = 'https://7514-188-58-11-220.ngrok-free.app ';\n\n// API istekleri için ortak headers\nexport const getApiHeaders = (token) => {\n  return {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n    'ngrok-skip-browser-warning': 'true',\n    'Authorization': token ? `Bearer ${token}` : ''\n  };\n};\n\n// Token yenileme kontrol fonksiyonu - gerekirse\nexport const isTokenExpired = () => {\n  try {\n    const expirationDate = localStorage.getItem('tokenExpiration');\n    if (!expirationDate) return true;\n    \n    return new Date(expirationDate) < new Date();\n  } catch (error) {\n    console.error('Token expiration check error:', error);\n    return true; // Hata durumunda, token'ı geçersiz kabul et\n  }\n};\n\n// Function to get full API URL\nexport const getApiUrl = (endpoint) => {\n  // Ngrok güvenlik kontrolünü bypass etmek için \"skip_browser_warning=1\" parametresi ekle\n  const separator = endpoint.includes('?') ? '&' : '?';\n  const endpointWithParam = `${endpoint}${separator}skip_browser_warning=1`;\n  \n  return `${API_BASE_URL}${endpointWithParam.startsWith('/') ? endpointWithParam : '/' + endpointWithParam}`;\n}; "],"mappings":"AAAA;;AAEA;AACA,OAAO,MAAMA,YAAY,GAAG,4CAA4C;;AAExE;AACA,OAAO,MAAMC,aAAa,GAAIC,KAAK,IAAK;EACtC,OAAO;IACL,QAAQ,EAAE,kBAAkB;IAC5B,cAAc,EAAE,kBAAkB;IAClC,4BAA4B,EAAE,MAAM;IACpC,eAAe,EAAEA,KAAK,GAAG,UAAUA,KAAK,EAAE,GAAG;EAC/C,CAAC;AACH,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAClC,IAAI;IACF,MAAMC,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;IAC9D,IAAI,CAACF,cAAc,EAAE,OAAO,IAAI;IAEhC,OAAO,IAAIG,IAAI,CAACH,cAAc,CAAC,GAAG,IAAIG,IAAI,CAAC,CAAC;EAC9C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,OAAO,IAAI,CAAC,CAAC;EACf;AACF,CAAC;;AAED;AACA,OAAO,MAAME,SAAS,GAAIC,QAAQ,IAAK;EACrC;EACA,MAAMC,SAAS,GAAGD,QAAQ,CAACE,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG;EACpD,MAAMC,iBAAiB,GAAG,GAAGH,QAAQ,GAAGC,SAAS,wBAAwB;EAEzE,OAAO,GAAGZ,YAAY,GAAGc,iBAAiB,CAACC,UAAU,CAAC,GAAG,CAAC,GAAGD,iBAAiB,GAAG,GAAG,GAAGA,iBAAiB,EAAE;AAC5G,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}