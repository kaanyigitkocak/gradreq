{"ast":null,"code":"var _jsxFileName = \"/Users/yigit/Projects/GradReq/gms-main/src/components/common/ForgotPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { getApiUrl } from '../../config/api'; // Updated import path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = ({\n  onClose\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // ŞU AN SAHTE İŞLEM (mock delay)\n    try {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      setMessage('Reset link sent');\n      console.log('dümenden istek gönderildi', email);\n    } catch (error) {\n      setMessage('Error');\n      console.error('Sahte hata:', error);\n    }\n\n    // BACKEND versiyonu: gerçek istek\n    /*\n    try {\n      const res = await axios.post(getApiUrl('/api/forgot-password'), { email });\n      setMessage(res.data.message || 'Reset link sent');\n    } catch (error) {\n      setMessage('Error sending reset link');\n      console.error('POST /forgot-password failed:', error);\n    }\n    */\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: modalStyle,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: formStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter your email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send Reset Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        type: \"button\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"mxdRTHxkiTeLOv2akPbesFCh75U=\");\n_c = ForgotPassword;\nconst modalStyle = {\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  backgroundColor: 'rgba(0,0,0,0.4)',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center'\n};\nconst formStyle = {\n  backgroundColor: 'white',\n  padding: '2rem',\n  borderRadius: '8px',\n  textAlign: 'center',\n  minWidth: '300px'\n};\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","axios","getApiUrl","jsxDEV","_jsxDEV","ForgotPassword","onClose","_s","email","setEmail","message","setMessage","handleSubmit","e","preventDefault","Promise","resolve","setTimeout","console","log","error","style","modalStyle","children","onSubmit","formStyle","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","onClick","_c","position","top","left","width","height","backgroundColor","display","justifyContent","alignItems","padding","borderRadius","textAlign","minWidth","$RefreshReg$"],"sources":["/Users/yigit/Projects/GradReq/gms-main/src/components/common/ForgotPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { getApiUrl } from '../../config/api'; // Updated import path\n\nconst ForgotPassword = ({ onClose }) => {\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // ŞU AN SAHTE İŞLEM (mock delay)\n    try {\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n      setMessage('Reset link sent');\n      console.log('dümenden istek gönderildi', email);\n    } catch (error) {\n      setMessage('Error');\n      console.error('Sahte hata:', error);\n    }\n\n    // BACKEND versiyonu: gerçek istek\n    /*\n    try {\n      const res = await axios.post(getApiUrl('/api/forgot-password'), { email });\n      setMessage(res.data.message || 'Reset link sent');\n    } catch (error) {\n      setMessage('Error sending reset link');\n      console.error('POST /forgot-password failed:', error);\n    }\n    */\n  };\n\n  return (\n    <div style={modalStyle}>\n      <form onSubmit={handleSubmit} style={formStyle}>\n        <h3>Forgot Password</h3>\n        <input\n          type=\"email\"\n          placeholder=\"Enter your email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n        />\n        <button type=\"submit\">Send Reset Link</button>\n        <p>{message}</p>\n        <button onClick={onClose} type=\"button\">Close</button>\n      </form>\n    </div>\n  );\n};\n\nconst modalStyle = {\n  position: 'fixed',\n  top: 0, left: 0,\n  width: '100%', height: '100%',\n  backgroundColor: 'rgba(0,0,0,0.4)',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n};\n\nconst formStyle = {\n  backgroundColor: 'white',\n  padding: '2rem',\n  borderRadius: '8px',\n  textAlign: 'center',\n  minWidth: '300px',\n};\n\nexport default ForgotPassword; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}